{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { breadcrumbTheme } from './theme.js';\nconst Breadcrumb = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([breadcrumbTheme.root, provider.theme?.breadcrumb?.root, props.theme], [get(provider.clearTheme, \"breadcrumb.root\"), props.clearTheme], [get(provider.applyTheme, \"breadcrumb.root\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.breadcrumb);\n  return /* @__PURE__ */jsx(\"nav\", {\n    ref,\n    \"aria-label\": \"Breadcrumb\",\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: /* @__PURE__ */jsx(\"ol\", {\n      className: theme.list,\n      children\n    })\n  });\n});\nBreadcrumb.displayName = \"Breadcrumb\";\nexport { Breadcrumb };","map":{"version":3,"names":["Breadcrumb","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","breadcrumbTheme","root","breadcrumb","get","clearTheme","applyTheme","children","className","restProps","resolveProps","jsx","twMerge","base","list"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Breadcrumb\\Breadcrumb.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport type { BreadcrumbItemTheme } from \"./BreadcrumbItem\";\nimport { breadcrumbTheme } from \"./theme\";\n\nexport interface BreadcrumbTheme {\n  root: BreadcrumbRootTheme;\n  item: BreadcrumbItemTheme;\n}\n\nexport interface BreadcrumbRootTheme {\n  base: string;\n  list: string;\n}\n\nexport interface BreadcrumbProps extends ComponentProps<\"nav\">, ThemingProps<BreadcrumbRootTheme> {}\n\nexport const Breadcrumb = forwardRef<HTMLElement, BreadcrumbProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [breadcrumbTheme.root, provider.theme?.breadcrumb?.root, props.theme],\n    [get(provider.clearTheme, \"breadcrumb.root\"), props.clearTheme],\n    [get(provider.applyTheme, \"breadcrumb.root\"), props.applyTheme],\n  );\n\n  const { children, className, ...restProps } = resolveProps(props, provider.props?.breadcrumb);\n\n  return (\n    <nav ref={ref} aria-label=\"Breadcrumb\" className={twMerge(theme.base, className)} {...restProps}>\n      <ol className={theme.list}>{children}</ol>\n    </nav>\n  );\n});\n\nBreadcrumb.displayName = \"Breadcrumb\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,UAAc,GAAGC,UAAA,EAAAC,KAAgB,EAAEC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAsB,CACvB,CAACC,eAAa,CAAAC,IAAA,EAAAL,QAAY,CAAAE,KAAA,EAAAI,UAAoB,EAAKD,IAAC,EAAAP,KAAU,CAACI,KAAA,GAC/D,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,iBAAiB,CAAC,EAAEV,KAAK,CAACU,UAAU,GAC/D,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,sBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,QAAA;IAAAC,SAA2B;IAAA,GAAKC;EAAS,IAAAC,YAAc,CAAAf,KAAA,EAAAE,QAAc,CAAAF,KAAW,EAAAQ,UAAQ,CAAK;EAC9F,sBAAAQ,GAAA;IAAAf,GAAA;IAAA;IAAAY,SAAA,EAAAI,OAAA,CAAAb,KAAA,CAAAc,IAAA,EAAAL,SAAA;IAAA,GAAAC,SAAA;IAAAF,QAAA,iBAAAI,GAAA;MAAAH,SAAA,EAAAT,KAAA,CAAAe,IAAA;MAAAP;IAAA;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}