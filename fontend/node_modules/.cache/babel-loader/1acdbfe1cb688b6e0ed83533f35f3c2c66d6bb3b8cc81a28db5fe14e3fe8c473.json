{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { ChevronLeftIcon } from '../../icons/chevron-left-icon.js';\nimport { ChevronRightIcon } from '../../icons/chevron-right-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { range } from './helpers.js';\nimport { PaginationButton, PaginationNavigation } from './PaginationButton.js';\nimport { paginationTheme } from './theme.js';\nconst Pagination = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([paginationTheme, provider.theme?.pagination, props.theme], [get(provider.clearTheme, \"pagination\"), props.clearTheme], [get(provider.applyTheme, \"pagination\"), props.applyTheme]);\n  const {\n    className,\n    currentPage,\n    layout = \"pagination\",\n    nextLabel = \"Next\",\n    onPageChange,\n    previousLabel = \"Previous\",\n    renderPaginationButton = props2 => /* @__PURE__ */jsx(PaginationButton, {\n      ...props2\n    }),\n    showIcons: showIcon = false,\n    totalPages,\n    ...restProps\n  } = resolveProps(props, provider.props?.pagination);\n  const lastPage = Math.min(Math.max(layout === \"pagination\" ? currentPage + 2 : currentPage + 4, 5), totalPages);\n  const firstPage = Math.max(1, lastPage - 4);\n  function goToNextPage() {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  }\n  function goToPreviousPage() {\n    onPageChange(Math.max(currentPage - 1, 1));\n  }\n  return /* @__PURE__ */jsxs(\"nav\", {\n    ref,\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: [layout === \"table\" && /* @__PURE__ */jsxs(\"div\", {\n      className: theme.layout.table.base,\n      children: [\"Showing \", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: firstPage\n      }), \" to\\xA0\", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: lastPage\n      }), \" of\\xA0\", /* @__PURE__ */jsx(\"span\", {\n        className: theme.layout.table.span,\n        children: totalPages\n      }), \" Entries\"]\n    }), /* @__PURE__ */jsxs(\"ul\", {\n      className: theme.pages.base,\n      children: [/* @__PURE__ */jsx(\"li\", {\n        children: /* @__PURE__ */jsxs(PaginationNavigation, {\n          className: twMerge(theme.pages.previous.base, showIcon && theme.pages.showIcon),\n          onClick: goToPreviousPage,\n          disabled: currentPage === 1,\n          children: [showIcon && /* @__PURE__ */jsx(ChevronLeftIcon, {\n            \"aria-hidden\": true,\n            className: theme.pages.previous.icon\n          }), previousLabel]\n        })\n      }), layout === \"pagination\" && range(firstPage, lastPage).map(page => /* @__PURE__ */jsx(\"li\", {\n        \"aria-current\": page === currentPage ? \"page\" : void 0,\n        children: renderPaginationButton({\n          className: twMerge(theme.pages.selector.base, currentPage === page && theme.pages.selector.active),\n          active: page === currentPage,\n          onClick: () => onPageChange(page),\n          children: page\n        })\n      }, page)), /* @__PURE__ */jsx(\"li\", {\n        children: /* @__PURE__ */jsxs(PaginationNavigation, {\n          className: twMerge(theme.pages.next.base, showIcon && theme.pages.showIcon),\n          onClick: goToNextPage,\n          disabled: currentPage === totalPages,\n          children: [nextLabel, showIcon && /* @__PURE__ */jsx(ChevronRightIcon, {\n            \"aria-hidden\": true,\n            className: theme.pages.next.icon\n          })]\n        })\n      })]\n    })]\n  });\n});\nPagination.displayName = \"Pagination\";\nexport { Pagination };","map":{"version":3,"names":["Pagination","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","paginationTheme","pagination","get","clearTheme","applyTheme","className","currentPage","layout","nextLabel","onPageChange","previousLabel","renderPaginationButton","props2","jsx","PaginationButton","showIcons","showIcon","totalPages","restProps","resolveProps","lastPage","Math","min","max","firstPage","goToNextPage","goToPreviousPage","jsxs","twMerge","base","children","table","span","pages","PaginationNavigation","previous","onClick","disabled","ChevronLeftIcon","icon","range","map","page","selector","active","next","ChevronRightIcon"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Pagination\\Pagination.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type ReactNode } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { ChevronLeftIcon } from \"../../icons/chevron-left-icon\";\nimport { ChevronRightIcon } from \"../../icons/chevron-right-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { range } from \"./helpers\";\nimport type { PaginationButtonProps, PaginationButtonTheme } from \"./PaginationButton\";\nimport { PaginationButton, PaginationNavigation } from \"./PaginationButton\";\nimport { paginationTheme } from \"./theme\";\n\nexport interface PaginationTheme {\n  base: string;\n  layout: PaginationLayoutTheme;\n  pages: PaginationPagesTheme;\n}\n\nexport interface PaginationRootTheme {\n  base: string;\n}\n\nexport interface PaginationLayoutTheme {\n  table: {\n    base: string;\n    span: string;\n  };\n}\n\nexport interface PaginationPagesTheme {\n  base: string;\n  showIcon: string;\n  previous: PaginationNavigationTheme;\n  next: PaginationNavigationTheme;\n  selector: PaginationButtonTheme;\n}\n\nexport interface PaginationNavigationTheme {\n  base: string;\n  icon: string;\n}\n\nexport interface PaginationProps extends ComponentProps<\"nav\">, ThemingProps<PaginationTheme> {\n  currentPage: number;\n  layout?: \"navigation\" | \"pagination\" | \"table\";\n  nextLabel?: string;\n  onPageChange: (page: number) => void;\n  previousLabel?: string;\n  renderPaginationButton?: (props: PaginationButtonProps) => ReactNode;\n  showIcons?: boolean;\n  totalPages: number;\n}\n\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [paginationTheme, provider.theme?.pagination, props.theme],\n    [get(provider.clearTheme, \"pagination\"), props.clearTheme],\n    [get(provider.applyTheme, \"pagination\"), props.applyTheme],\n  );\n\n  const {\n    className,\n    currentPage,\n    layout = \"pagination\",\n    nextLabel = \"Next\",\n    onPageChange,\n    previousLabel = \"Previous\",\n    renderPaginationButton = (props: PaginationButtonProps) => <PaginationButton {...props} />,\n    showIcons: showIcon = false,\n    totalPages,\n    ...restProps\n  } = resolveProps(props, provider.props?.pagination);\n\n  const lastPage = Math.min(Math.max(layout === \"pagination\" ? currentPage + 2 : currentPage + 4, 5), totalPages);\n  const firstPage = Math.max(1, lastPage - 4);\n\n  function goToNextPage() {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  }\n\n  function goToPreviousPage() {\n    onPageChange(Math.max(currentPage - 1, 1));\n  }\n\n  return (\n    <nav ref={ref} className={twMerge(theme.base, className)} {...restProps}>\n      {layout === \"table\" && (\n        <div className={theme.layout.table.base}>\n          Showing <span className={theme.layout.table.span}>{firstPage}</span> to&nbsp;\n          <span className={theme.layout.table.span}>{lastPage}</span> of&nbsp;\n          <span className={theme.layout.table.span}>{totalPages}</span> Entries\n        </div>\n      )}\n      <ul className={theme.pages.base}>\n        <li>\n          <PaginationNavigation\n            className={twMerge(theme.pages.previous.base, showIcon && theme.pages.showIcon)}\n            onClick={goToPreviousPage}\n            disabled={currentPage === 1}\n          >\n            {showIcon && <ChevronLeftIcon aria-hidden className={theme.pages.previous.icon} />}\n            {previousLabel}\n          </PaginationNavigation>\n        </li>\n        {layout === \"pagination\" &&\n          range(firstPage, lastPage).map((page: number) => (\n            <li aria-current={page === currentPage ? \"page\" : undefined} key={page}>\n              {renderPaginationButton({\n                className: twMerge(theme.pages.selector.base, currentPage === page && theme.pages.selector.active),\n                active: page === currentPage,\n                onClick: () => onPageChange(page),\n                children: page,\n              })}\n            </li>\n          ))}\n        <li>\n          <PaginationNavigation\n            className={twMerge(theme.pages.next.base, showIcon && theme.pages.showIcon)}\n            onClick={goToNextPage}\n            disabled={currentPage === totalPages}\n          >\n            {nextLabel}\n            {showIcon && <ChevronRightIcon aria-hidden className={theme.pages.next.icon} />}\n          </PaginationNavigation>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n\nPagination.displayName = \"Pagination\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}