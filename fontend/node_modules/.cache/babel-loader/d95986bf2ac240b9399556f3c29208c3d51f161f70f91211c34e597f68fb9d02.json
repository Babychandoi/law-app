{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { timelineTheme } from './theme.js';\nimport { useTimelineContext } from './TimelineContext.js';\nimport { useTimelineItemContext } from './TimelineItemContext.js';\nconst TimelinePoint = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    horizontal\n  } = useTimelineContext();\n  const {\n    theme: itemTheme,\n    clearTheme: itemClearTheme,\n    applyTheme: itemApplyTheme\n  } = useTimelineItemContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([timelineTheme.item.point, provider.theme?.timeline?.item?.point, rootTheme?.item?.point, itemTheme?.point, props.theme], [get(provider.clearTheme, \"timeline.item.point\"), get(rootClearTheme, \"item.point\"), get(itemClearTheme, \"point\"), props.clearTheme], [get(provider.applyTheme, \"timeline.item.point\"), get(rootApplyTheme, \"item.point\"), get(itemApplyTheme, \"point\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    icon: Icon,\n    ...restProps\n  } = resolveProps(props, provider.props?.timelinePoint);\n  return /* @__PURE__ */jsxs(\"div\", {\n    ref,\n    \"data-testid\": \"timeline-point\",\n    className: twMerge(horizontal && theme.horizontal, !horizontal && theme.vertical, className),\n    ...restProps,\n    children: [children, Icon ? /* @__PURE__ */jsx(\"span\", {\n      className: twMerge(theme.marker.icon.wrapper),\n      children: /* @__PURE__ */jsx(Icon, {\n        \"aria-hidden\": true,\n        className: twMerge(theme.marker.icon.base)\n      })\n    }) : /* @__PURE__ */jsx(\"div\", {\n      className: twMerge(horizontal && theme.marker.base.horizontal, !horizontal && theme.marker.base.vertical)\n    }), horizontal && /* @__PURE__ */jsx(\"div\", {\n      className: twMerge(theme.line)\n    })]\n  });\n});\nTimelinePoint.displayName = \"TimelinePoint\";\nexport { TimelinePoint };","map":{"version":3,"names":["TimelinePoint","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","horizontal","useTimelineContext","itemTheme","itemClearTheme","itemApplyTheme","useTimelineItemContext","provider","useThemeProvider","useResolveTheme","timelineTheme","item","point","timeline","get","children","className","icon","Icon","restProps","resolveProps","timelinePoint","jsxs","twMerge","vertical","jsx","marker","wrapper","base","line"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Timeline\\TimelinePoint.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type FC } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { timelineTheme } from \"./theme\";\nimport { useTimelineContext } from \"./TimelineContext\";\nimport { useTimelineItemContext } from \"./TimelineItemContext\";\n\nexport interface TimelinePointTheme {\n  horizontal: string;\n  line: string;\n  marker: {\n    base: {\n      horizontal: string;\n      vertical: string;\n    };\n    icon: {\n      base: string;\n      wrapper: string;\n    };\n  };\n  vertical: string;\n}\n\nexport interface TimelinePointProps extends ComponentProps<\"div\">, ThemingProps<TimelinePointTheme> {\n  icon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const TimelinePoint = forwardRef<HTMLDivElement, TimelinePointProps>((props, ref) => {\n  const { theme: rootTheme, clearTheme: rootClearTheme, applyTheme: rootApplyTheme, horizontal } = useTimelineContext();\n  const { theme: itemTheme, clearTheme: itemClearTheme, applyTheme: itemApplyTheme } = useTimelineItemContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [\n      timelineTheme.item.point,\n      provider.theme?.timeline?.item?.point,\n      rootTheme?.item?.point,\n      itemTheme?.point,\n      props.theme,\n    ],\n    [\n      get(provider.clearTheme, \"timeline.item.point\"),\n      get(rootClearTheme, \"item.point\"),\n      get(itemClearTheme, \"point\"),\n      props.clearTheme,\n    ],\n    [\n      get(provider.applyTheme, \"timeline.item.point\"),\n      get(rootApplyTheme, \"item.point\"),\n      get(itemApplyTheme, \"point\"),\n      props.applyTheme,\n    ],\n  );\n\n  const { children, className, icon: Icon, ...restProps } = resolveProps(props, provider.props?.timelinePoint);\n\n  return (\n    <div\n      ref={ref}\n      data-testid=\"timeline-point\"\n      className={twMerge(horizontal && theme.horizontal, !horizontal && theme.vertical, className)}\n      {...restProps}\n    >\n      {children}\n      {Icon ? (\n        <span className={twMerge(theme.marker.icon.wrapper)}>\n          <Icon aria-hidden className={twMerge(theme.marker.icon.base)} />\n        </span>\n      ) : (\n        <div\n          className={twMerge(horizontal && theme.marker.base.horizontal, !horizontal && theme.marker.base.vertical)}\n        />\n      )}\n      {horizontal && <div className={twMerge(theme.line)} />}\n    </div>\n  );\n});\n\nTimelinePoint.displayName = \"TimelinePoint\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,aAAe,GAAAC,UAAW,EAAAC,KAAU,EAAEC,GAAA;EACtC,MAAM;IAAEC,KAAK,EAAEC,SAAS;IAAEC,UAAU,EAAEC,cAAc;IAAEC,UAAU,EAAEC,cAAc;IAAEC;EAAG,IAAAC,kBAAwB;EAC7G,MAAM;IAAAP,KAAA,EAAQQ,SAAG;IAAAN,UAAkB,EAAAO,cAAA;IAAAL,UAAA,EAAAM;EAAA,IAAAC,sBAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAIb,KAAA,GAAAc,eAAA,CACJ,CACMC,aAAS,CAAKC,IAAE,CAAAC,KAAQ,EACxBL,QAAA,CAASZ,KAAE,EAAIkB,QAAO,EAAAF,IAAA,EAAAC,KAAA,EACtBhB,SAAS,EAAEe,IAAA,EAAKC,KAAA,EAChBT,SAAM,EAAAS,KAAA,EACPnB,KAAA,CAAAE,KAAA,CACD,EACJ,CACMmB,GAAG,CAACP,QAAA,CAAAV,UAAgB,uBAAa,GACjCiB,GAAG,CAAChB,cAAc,EAAE,YAAQ,GAC5BgB,GAAA,CAAAV,cAAM,YACPX,KAAA,CAAAI,UAAA,CACD,EACJ,CACMiB,GAAG,CAACP,QAAA,CAAAR,UAAgB,uBAAa,GACjCe,GAAG,CAACd,cAAc,EAAE,YAAQ,GAC5Bc,GAAA,CAAAT,cAAM,YACZZ,KAAA,CAAAM,UAAA,CAEE;EACA;IAAAgB,QAAA;IAAAC,SAA2B;IAAAC,IAAA,EAAAC,IAAA;IAAA,GAAAC;EAAA,IAAAC,YAAA,CAAA3B,KAAA,EAAAc,QAAA,CAAAd,KAAA,EAAA4B,aAAA;EAC7B,OAAS,eAAAC,IAAA,CACL,OACJ;IACM5B,GAAA;IACA,aAAW,kBAAkB;IAC7BsB,SAAG,EAAAO,OAAS,CAAAtB,UAAA,IAAAN,KAAA,CAAAM,UAAA,GAAAA,UAAA,IAAAN,KAAA,CAAA6B,QAAA,EAAAR,SAAA;IACZ,GAAAG,SAAU;IAChBJ,QAAQ,EAAQ,CACRA,QAAI,EACZG,IAAU,GAAK,eAAAO,GAAA;MAAAT,SAAA,EAAAO,OAAA,CAAA5B,KAAA,CAAA+B,MAAA,CAAAT,IAAA,CAAAU,OAAA;MAAAZ,QAAA,iBAAAU,GAAA,CAAAP,IAAA;QAAA;QAAAF,SAAA,EAAAO,OAAA,CAAA5B,KAAA,CAAA+B,MAAA,CAAAT,IAAA,CAAAW,IAAA;MAAA;IAAA,oBAAAH,GAAA,CACL,OACV;MACAT,SAAA,EAAAO,OAAA,CAAAtB,UAAA,IAAAN,KAAA,CAAA+B,MAAA,CAAAE,IAAA,CAAA3B,UAAA,GAAAA,UAAA,IAAAN,KAAA,CAAA+B,MAAA,CAAAE,IAAA,CAAAJ,QAAA;IACS,CACD,GACRvB,UAAA,mBAAAwB,GAAA;MAAAT,SAAA,EAAAO,OAAA,CAAA5B,KAAA,CAAAkC,IAAA;IAAA;EAEG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}