{"ast":null,"code":"import { deepmergeCustom } from 'deepmerge-ts';\nfunction deepMergeStrings(merge) {\n  return deepmergeCustom({\n    mergeOthers: (values, utils) => {\n      if (values.some(value => typeof value === \"string\")) {\n        const strings = values.filter(value => typeof value === \"string\");\n        const stringMap = /* @__PURE__ */new Set();\n        const uniqueStrings = [];\n        for (const string of strings) {\n          const parts = [...new Set(string.split(/\\s+/))];\n          uniqueStrings.push(parts.filter(part => !stringMap.has(part)).join(\" \"));\n          for (const part of parts) {\n            stringMap.add(part);\n          }\n        }\n        return merge(uniqueStrings);\n      }\n      return utils.actions.defaultMerge;\n    }\n  });\n}\nexport { deepMergeStrings };","map":{"version":3,"names":["deepMergeStrings","merge","deepmergeCustom","mergeOthers","values","utils","some","value","strings","filter","stringMap","Set","uniqueStrings","string","parts","split","push","part","has","join","add","actions","defaultMerge"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\helpers\\deep-merge.ts"],"sourcesContent":["import { deepmergeCustom } from \"deepmerge-ts\";\n\nexport function deepMergeStrings(merge: (values: string[]) => string) {\n  return deepmergeCustom({\n    mergeOthers: (values, utils) => {\n      if (values.some((value) => typeof value === \"string\")) {\n        const strings = values.filter((value) => typeof value === \"string\");\n        const stringMap = new Set<string>();\n        const uniqueStrings: string[] = [];\n\n        for (const string of strings) {\n          const parts = [...new Set(string.split(/\\s+/))];\n\n          uniqueStrings.push(parts.filter((part) => !stringMap.has(part)).join(\" \"));\n\n          for (const part of parts) {\n            stringMap.add(part);\n          }\n        }\n\n        return merge(uniqueStrings);\n      }\n\n      return utils.actions.defaultMerge;\n    },\n  });\n}\n"],"mappings":";AAEO,SAASA,gBAAgBA,CAACC,KAAK,EAAE;EACtC,OAAOC,eAAe,CAAC;IACrBC,WAAW,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC9B,IAAID,MAAM,CAACE,IAAI,CAAEC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,CAAC,EAAE;QACrD,MAAMC,OAAO,GAAGJ,MAAM,CAACK,MAAM,CAAEF,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,CAAC;QACnE,MAAMG,SAAS,kBAAmB,IAAIC,GAAG,EAAE;QAC3C,MAAMC,aAAa,GAAG,EAAE;QACxB,KAAK,MAAMC,MAAM,IAAIL,OAAO,EAAE;UAC5B,MAAMM,KAAK,GAAG,CAAC,GAAG,IAAIH,GAAG,CAACE,MAAM,CAACE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;UAC/CH,aAAa,CAACI,IAAI,CAACF,KAAK,CAACL,MAAM,CAAEQ,IAAI,IAAK,CAACP,SAAS,CAACQ,GAAG,CAACD,IAAI,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;UAC1E,KAAK,MAAMF,IAAI,IAAIH,KAAK,EAAE;YACxBJ,SAAS,CAACU,GAAG,CAACH,IAAI,CAAC;UAC/B;QACA;QACQ,OAAOhB,KAAK,CAACW,aAAa,CAAC;MACnC;MACM,OAAOP,KAAK,CAACgB,OAAO,CAACC,YAAY;IACvC;EACA,CAAG,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}