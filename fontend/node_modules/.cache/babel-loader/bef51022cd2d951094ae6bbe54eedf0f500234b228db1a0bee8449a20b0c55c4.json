{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { XIcon } from '../../icons/x-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { toastTheme } from './theme.js';\nimport { useToastContext } from './ToastContext.js';\nconst ToastToggle = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    duration,\n    isClosed,\n    isRemoved,\n    setIsClosed,\n    setIsRemoved\n  } = useToastContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([toastTheme.toggle, provider.theme?.toast?.toggle, rootTheme?.toggle, props.theme], [get(provider.clearTheme, \"toast.toggle\"), get(rootClearTheme, \"toggle\"), props.clearTheme], [get(provider.applyTheme, \"toast.toggle\"), get(rootApplyTheme, \"toggle\"), props.applyTheme]);\n  const {\n    className,\n    onClick,\n    onDismiss,\n    xIcon: XIcon$1 = XIcon,\n    ...restProps\n  } = resolveProps(props, provider.props?.toastToggle);\n  function handleClick(e) {\n    if (onClick) {\n      onClick(e);\n    }\n    if (onDismiss) {\n      onDismiss();\n      return;\n    }\n    setIsClosed(!isClosed);\n    setTimeout(() => setIsRemoved(!isRemoved), duration);\n  }\n  return /* @__PURE__ */jsx(\"button\", {\n    ref,\n    \"aria-label\": \"Close\",\n    onClick: handleClick,\n    type: \"button\",\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: /* @__PURE__ */jsx(XIcon$1, {\n      \"aria-hidden\": true,\n      className: theme.icon\n    })\n  });\n});\nToastToggle.displayName = \"ToastToggle\";\nexport { ToastToggle };","map":{"version":3,"names":["ToastToggle","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","duration","isClosed","isRemoved","setIsClosed","setIsRemoved","useToastContext","provider","useThemeProvider","useResolveTheme","toastTheme","toggle","toast","get","className","onClick","onDismiss","xIcon","XIcon$1","XIcon","restProps","resolveProps","toastToggle","handleClick","e","setTimeout","jsx","type","twMerge","base","children","icon"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Toast\\ToastToggle.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type FC, type MouseEvent } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { XIcon as DefaultXIcon } from \"../../icons/x-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { toastTheme } from \"./theme\";\nimport { useToastContext } from \"./ToastContext\";\n\nexport interface ToastToggleTheme {\n  base: string;\n  icon: string;\n}\n\nexport interface ToastToggleProps extends ComponentProps<\"button\">, ThemingProps<ToastToggleTheme> {\n  xIcon?: FC<ComponentProps<\"svg\">>;\n  onDismiss?: () => void;\n}\n\nexport const ToastToggle = forwardRef<HTMLButtonElement, ToastToggleProps>((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    duration,\n    isClosed,\n    isRemoved,\n    setIsClosed,\n    setIsRemoved,\n  } = useToastContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [toastTheme.toggle, provider.theme?.toast?.toggle, rootTheme?.toggle, props.theme],\n    [get(provider.clearTheme, \"toast.toggle\"), get(rootClearTheme, \"toggle\"), props.clearTheme],\n    [get(provider.applyTheme, \"toast.toggle\"), get(rootApplyTheme, \"toggle\"), props.applyTheme],\n  );\n\n  const {\n    className,\n    onClick,\n    onDismiss,\n    xIcon: XIcon = DefaultXIcon,\n    ...restProps\n  } = resolveProps(props, provider.props?.toastToggle);\n\n  function handleClick(e: MouseEvent<HTMLButtonElement>) {\n    if (onClick) {\n      onClick(e);\n    }\n\n    if (onDismiss) {\n      onDismiss();\n      return;\n    }\n\n    setIsClosed(!isClosed);\n    setTimeout(() => setIsRemoved(!isRemoved), duration);\n  }\n\n  return (\n    <button\n      ref={ref}\n      aria-label=\"Close\"\n      onClick={handleClick}\n      type=\"button\"\n      className={twMerge(theme.base, className)}\n      {...restProps}\n    >\n      <XIcon aria-hidden className={theme.icon} />\n    </button>\n  );\n});\nToastToggle.displayName = \"ToastToggle\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,WAAM,GAAAC,UAAA,EAAAC,KAAA,EAAAC,GAAA;EACR,MAAI;IACAC,KAAA,EAAAC,SAAY;IACZC,UAAU,EAAEC,cAAc;IAC1BC,UAAQ,EAAAC,cAAA;IACRC,QAAQ;IACRC,QAAA;IACAC,SAAA;IACAC,WAAA;IACDC;EACD,IAAAC,eAAiB;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKb,KAAA,GAAWc,eAAQ,CACpB,CAACC,UAAI,CAAAC,MAAS,EAAAJ,QAAY,CAAAZ,KAAA,EAAAiB,KAAe,EAAED,MAAI,EAAAf,SAAA,EAAce,MAAE,EAAAlB,KAAW,CAAAE,KAAM,GAChF,CAACkB,GAAG,CAACN,QAAQ,CAACV,UAAU,EAAE,cAAc,CAAC,EAAEgB,GAAG,CAACf,cAAc,EAAE,QAAQ,CAAC,EAAEL,KAAK,CAACI,UAAU,GAC3F,CAAAgB,GAAA,CAAAN,QAAA,CAAAR,UAAA,mBAAAc,GAAA,CAAAb,cAAA,aAAAP,KAAA,CAAAM,UAAA,CACD;EACF,MAAI;IACAe,SAAO;IACPC,OAAA;IACAC,SAAO;IACPC,KAAG,EAAAC,OAAA,GAAAC,KAAA;IACJ,GAAGC;EACJ,IAAAC,YAAS,CAAA5B,KAAa,EAAEc,QAAA,CAAAd,KAAA,EAAA6B,WAAA;EAC1B,SAAQC,WAASA,CAAAC,CAAA;IACjB,IAAMT,OAAS,EAAC;MAChBA,OAAA,CAAAS,CAAA;IACI;IACJ,IAAMR,SAAW;MACXA,SAAA;MACN;IACI;IACAZ,WAAW,EAAAF,QAAM;IACrBuB,UAAA,OAAApB,YAAA,EAAAF,SAAA,GAAAF,QAAA;EACE;EACF,OAAI,eAAQyB,GAAA,CACR,UACJ;IACMhC,GAAA;IACA,YAAS,SAAW;IACpBqB,OAAM,EAAAQ,WAAQ;IACdI,IAAA,UAAW;IACXb,SAAG,EAAAc,OAAS,CAAAjC,KAAA,CAAAkC,IAAA,EAAAf,SAAA;IACZ,GAAAM,SAAQ;IACdU,QAAA,iBAAAJ,GAAA,CAAAR,OAAA;MAAA;MAAAJ,SAAA,EAAAnB,KAAA,CAAAoC;IAAA;EACG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}