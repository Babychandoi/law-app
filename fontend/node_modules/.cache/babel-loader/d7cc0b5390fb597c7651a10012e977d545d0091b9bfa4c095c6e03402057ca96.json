{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { ChevronRightIcon } from '../../icons/chevron-right-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { breadcrumbTheme } from './theme.js';\nconst BreadcrumbItem = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([breadcrumbTheme.item, provider.theme?.breadcrumb?.item, props.theme], [get(provider.clearTheme, \"breadcrumb.item\"), props.clearTheme], [get(provider.applyTheme, \"breadcrumb.item\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    href,\n    icon: Icon,\n    ...restProps\n  } = resolveProps(props, provider.props?.breadcrumbItem);\n  const isLink = typeof href !== \"undefined\";\n  const Component = isLink ? \"a\" : \"span\";\n  return /* @__PURE__ */jsxs(\"li\", {\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: [/* @__PURE__ */jsx(ChevronRightIcon, {\n      \"aria-hidden\": true,\n      className: theme.chevron,\n      \"data-testid\": \"flowbite-breadcrumb-separator\"\n    }), /* @__PURE__ */jsxs(Component, {\n      ref,\n      className: theme.href[isLink ? \"on\" : \"off\"],\n      \"data-testid\": \"flowbite-breadcrumb-item\",\n      href,\n      children: [Icon && /* @__PURE__ */jsx(Icon, {\n        \"aria-hidden\": true,\n        className: theme.icon\n      }), children]\n    })]\n  });\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport { BreadcrumbItem };","map":{"version":3,"names":["BreadcrumbItem","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","breadcrumbTheme","item","breadcrumb","get","clearTheme","applyTheme","children","className","href","icon","Icon","restProps","resolveProps","breadcrumbItem","isLink","Component","jsxs","twMerge","base","jsx","ChevronRightIcon","chevron"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Breadcrumb\\BreadcrumbItem.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps, FC } from \"react\";\nimport { forwardRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { ChevronRightIcon } from \"../../icons/chevron-right-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { FlowbiteBoolean, ThemingProps } from \"../../types\";\nimport { breadcrumbTheme } from \"./theme\";\n\nexport interface BreadcrumbItemTheme {\n  base: string;\n  chevron: string;\n  href: FlowbiteBoolean;\n  icon: string;\n}\n\nexport interface BreadcrumbItemProps extends Omit<ComponentProps<\"li\">, \"ref\">, ThemingProps<BreadcrumbItemTheme> {\n  href?: string;\n  icon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const BreadcrumbItem = forwardRef<HTMLAnchorElement | HTMLSpanElement, BreadcrumbItemProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [breadcrumbTheme.item, provider.theme?.breadcrumb?.item, props.theme],\n    [get(provider.clearTheme, \"breadcrumb.item\"), props.clearTheme],\n    [get(provider.applyTheme, \"breadcrumb.item\"), props.applyTheme],\n  );\n\n  const { children, className, href, icon: Icon, ...restProps } = resolveProps(props, provider.props?.breadcrumbItem);\n\n  const isLink = typeof href !== \"undefined\";\n  const Component = isLink ? \"a\" : \"span\";\n\n  return (\n    <li className={twMerge(theme.base, className)} {...restProps}>\n      <ChevronRightIcon aria-hidden className={theme.chevron} data-testid=\"flowbite-breadcrumb-separator\" />\n      <Component\n        ref={ref as never}\n        className={theme.href[isLink ? \"on\" : \"off\"]}\n        data-testid=\"flowbite-breadcrumb-item\"\n        href={href}\n      >\n        {Icon && <Icon aria-hidden className={theme.icon} />}\n        {children}\n      </Component>\n    </li>\n  );\n});\n\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n"],"mappings":";;;;;;;;;;;AAYA,MAAEA,cAAiB,GAAAC,UAAA,EAAgBC,KAAE,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAsB,CACvB,CAACC,eAAa,CAAAC,IAAA,EAAAL,QAAY,CAAAE,KAAA,EAAAI,UAAoB,EAAKD,IAAC,EAAAP,KAAU,CAACI,KAAA,GAC/D,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,iBAAiB,CAAC,EAAEV,KAAK,CAACU,UAAU,GAC/D,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,sBAAAX,KAAA,CAAAW,UAAA,CACD;EACA,MAAM;IAAAC,QAAS;IAAAC,SAAW;IAAAC,IAAK;IAAAC,IAAA,EAAAC,IAAW;IAAA,GAAAC;EAAA,IAAAC,YAAA,CAAAlB,KAAA,EAAAE,QAAA,CAAAF,KAAA,EAAAmB,cAAA;EAC1C,MAAMC,MAAA,GAAS,OAAGN,IAAM,KAAM,WAAS;EACvC,MAAAO,SAAA,GAAAD,MAAuB,GAAI,GAAC,GAAI,MAAI;EACtC,sBAAwBE,IAAA;IAAAT,SAAoB,EAAAU,OAAA,CAAanB,KAAE,CAAIoB,IAAE,EAAAX,SAAW;IAAK,GAACI,SAAS;IAAAL,QAAA,EAAa,CACxG,eAAoBa,GAAA,CAAIC,gBAAA;MAAA;MAAAb,SAAA,EAAAT,KAAA,CAAAuB,OAAA;MAAA;IAAA,IACxB,eAAeL,IAAA,CACTD,SAAA,EACN;MACQpB,GAAA;MACAY,SAAA,EAAAT,KAAe,CAAAU,IAAA,CAAAM,MAAA,eAA0B;MACzC,aAAI;MACJN,IAAA;MACRF,QAAc,GACJI,IAAA,mBAAAS,GAAA,CAAAT,IAAA;QAAA;QAAAH,SAAA,EAAAT,KAAA,CAAAW;MAAA,IACVH,QAAA;IAEA,CACG,CAAE;EACJ;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}