{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { listTheme } from './theme.js';\nconst List = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([listTheme.root, provider.theme?.list?.root, props.theme], [get(provider.clearTheme, \"list.root\"), props.clearTheme], [get(provider.applyTheme, \"list.root\"), props.applyTheme]);\n  const {\n    className,\n    horizontal,\n    nested,\n    ordered,\n    unstyled,\n    ...restProps\n  } = resolveProps(props, provider.props?.list);\n  const Component = ordered ? \"ol\" : \"ul\";\n  return /* @__PURE__ */jsx(Component, {\n    ref,\n    className: twMerge(theme.base, theme.ordered[ordered ? \"on\" : \"off\"], unstyled && theme.unstyled, nested && theme.nested, horizontal && theme.horizontal, className),\n    ...restProps\n  });\n});\nList.displayName = \"List\";\nexport { List };","map":{"version":3,"names":["List","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","listTheme","root","list","get","clearTheme","applyTheme","className","horizontal","nested","ordered","unstyled","restProps","resolveProps","Component","jsx","twMerge","base"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\List\\List.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type PropsWithChildren } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport type { ListItemTheme } from \"./ListItem\";\nimport { listTheme } from \"./theme\";\n\nexport interface ListTheme {\n  root: ListRootTheme;\n  item: ListItemTheme;\n}\n\nexport interface ListRootTheme {\n  base: string;\n  ordered: {\n    on: string;\n    off: string;\n  };\n  horizontal: string;\n  unstyled: string;\n  nested: string;\n}\n\nexport interface ListProps\n  extends PropsWithChildren<ComponentProps<\"ul\"> & ComponentProps<\"ol\">>,\n    ThemingProps<ListRootTheme> {\n  horizontal?: boolean;\n  nested?: boolean;\n  ordered?: boolean;\n  unstyled?: boolean;\n}\n\nexport const List = forwardRef<HTMLUListElement | HTMLOListElement, ListProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [listTheme.root, provider.theme?.list?.root, props.theme],\n    [get(provider.clearTheme, \"list.root\"), props.clearTheme],\n    [get(provider.applyTheme, \"list.root\"), props.applyTheme],\n  );\n\n  const { className, horizontal, nested, ordered, unstyled, ...restProps } = resolveProps(props, provider.props?.list);\n\n  const Component = ordered ? \"ol\" : \"ul\";\n\n  return (\n    <Component\n      ref={ref as never}\n      className={twMerge(\n        theme.base,\n        theme.ordered[ordered ? \"on\" : \"off\"],\n        unstyled && theme.unstyled,\n        nested && theme.nested,\n        horizontal && theme.horizontal,\n        className,\n      )}\n      {...restProps}\n    />\n  );\n});\n\nList.displayName = \"List\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,IAAM,GAAAC,UAAW,EAAAC,KAAA,EAAAC,GAAgB,KAAE;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAUC,eAAe,CAC1B,CAACC,SAAI,CAAAC,IAAS,EAAAL,QAAU,CAAEE,KAAA,EAAAI,IAAW,EAACD,IAAE,EAAKP,KAAC,CAAAI,KAAU,CAAC,EACzD,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,WAAW,CAAC,EAAEV,KAAK,CAACU,UAAU,GACzD,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,gBAAAX,KAAA,CAAAW,UAAA,CACD;EACA,MAAM;IAAAC,SAAS;IAAGC,UAAU;IAAAC,MAAO;IAAIC,OAAA;IAAAC,QAAA;IAAA,GAAAC;EAAA,IAAAC,YAAA,CAAAlB,KAAA,EAAAE,QAAA,CAAAF,KAAA,EAAAQ,IAAA;EACvC,MAAAW,SAAA,GAAAJ,OAAuB,GAAG;EAC5B,OAAI,eAASK,GAAA,CACTD,SAAA,EACJ;IACMlB,GAAA;IACNW,SAAc,EAAAS,OAAI,CACVjB,KAAK,CAACkB,IAAA,EACNlB,KAAA,CAAAW,OAAY,CAAAA,OAAM,OAAQ,WAC1BC,QAAM,IAAIZ,KAAM,CAAAY,QAAM,EACtBF,MAAA,IAAUV,KAAI,CAAAU,MAAM,EACpBD,UAAA,IAAAT,KAAA,CAAAS,UAAA,EACDD,SACD;IACN,GAAAK;EACG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}