{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { ratingAdvancedTheme } from './theme.js';\nconst RatingAdvanced = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([ratingAdvancedTheme, provider.theme?.ratingAdvanced, props.theme], [get(provider.clearTheme, \"ratingAdvanced\"), props.clearTheme], [get(provider.applyTheme, \"ratingAdvanced\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    percentFilled = 0,\n    ...restProps\n  } = resolveProps(props, provider.props?.ratingAdvanced);\n  return /* @__PURE__ */jsxs(\"div\", {\n    ref,\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: [/* @__PURE__ */jsx(\"span\", {\n      className: theme.label,\n      children\n    }), /* @__PURE__ */jsx(\"div\", {\n      className: theme.progress.base,\n      children: /* @__PURE__ */jsx(\"div\", {\n        className: theme.progress.fill,\n        \"data-testid\": \"flowbite-rating-fill\",\n        style: {\n          width: `${percentFilled}%`\n        }\n      })\n    }), /* @__PURE__ */jsx(\"span\", {\n      className: theme.progress.label,\n      children: `${percentFilled}%`\n    })]\n  });\n});\nRatingAdvanced.displayName = \"RatingAdvanced\";\nexport { RatingAdvanced };","map":{"version":3,"names":["RatingAdvanced","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","ratingAdvancedTheme","ratingAdvanced","get","clearTheme","applyTheme","children","className","percentFilled","restProps","resolveProps","jsxs","twMerge","base","jsx","label","progress","fill","style","width"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Rating\\RatingAdvanced.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { ratingAdvancedTheme } from \"./theme\";\n\nexport interface RatingAdvancedTheme {\n  base: string;\n  label: string;\n  progress: {\n    base: string;\n    fill: string;\n    label: string;\n  };\n}\n\nexport interface RatingAdvancedProps extends ComponentProps<\"div\">, ThemingProps<RatingAdvancedTheme> {\n  percentFilled?: number;\n}\n\nexport const RatingAdvanced = forwardRef<HTMLDivElement, RatingAdvancedProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [ratingAdvancedTheme, provider.theme?.ratingAdvanced, props.theme],\n    [get(provider.clearTheme, \"ratingAdvanced\"), props.clearTheme],\n    [get(provider.applyTheme, \"ratingAdvanced\"), props.applyTheme],\n  );\n\n  const { children, className, percentFilled = 0, ...restProps } = resolveProps(props, provider.props?.ratingAdvanced);\n\n  return (\n    <div ref={ref} className={twMerge(theme.base, className)} {...restProps}>\n      <span className={theme.label}>{children}</span>\n      <div className={theme.progress.base}>\n        <div\n          className={theme.progress.fill}\n          data-testid=\"flowbite-rating-fill\"\n          style={{ width: `${percentFilled}%` }}\n        />\n      </div>\n      <span className={theme.progress.label}>{`${percentFilled}%`}</span>\n    </div>\n  );\n});\n\nRatingAdvanced.displayName = \"RatingAdvanced\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,cAAiB,GAAAC,UAAA,EAAgBC,KAAE,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAqB,CACtB,CAACC,mBAAa,EAAAJ,QAAY,CAAAE,KAAA,EAAAG,cAAyB,EAAAP,KAAA,CAAAI,KAAW,GAC9D,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,gBAAgB,CAAC,EAAET,KAAK,CAACS,UAAU,GAC9D,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,qBAAAV,KAAA,CAAAU,UAAA,CACD;EACA;IAAAC,QAAA;IAAAC,SAA2B;IAACC,aAAc;IAAA,GAASC;EAAU,IAAAC,YAAY,CAAAf,KAAU,EAAEE,QAAG,CAAAF,KAAW,EAAAO,cAAU;EAC/G,sBAAwBS,IAAA,CAAM,KAAI;IAAAf,GAAA;IAASW,SAAQ,EAAAK,OAAO,CAAAb,KAAU,CAACc,IAAA,EAAAN,SAAA;IAAA,GAAAE,SAAA;IAAAH,QAAA,GACrE,eAAoBQ,GAAG,CAAC,MAAK,EAAE;MAAEP,SAAS,EAAER,KAAM,CAAAgB,KAAA;MAAQT;IAAO,IACjE,eAAWQ,GAAA;MAAAP,SAAA,EAAAR,KAAA,CAAAiB,QAAA,CAAAH,IAAA;MAAAP,QAAA,iBAAAQ,GAAA,CACL,OACN;QACQP,SAAA,EAAAR,KAAe,CAAAiB,QAAA,CAAAC,IAAA;QACf,aAAS,EAAK,sBAAqB;QAC3CC,KAAA;UAAAC,KAAA,KAAAX,aAAA;QAAA;MACK,CACL;IAAA,IACG,eAAGM,GAAA;MAAAP,SAAA,EAAAR,KAAA,CAAAiB,QAAA,CAAAD,KAAA;MAAAT,QAAA,KAAAE,aAAA;IAAA;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}