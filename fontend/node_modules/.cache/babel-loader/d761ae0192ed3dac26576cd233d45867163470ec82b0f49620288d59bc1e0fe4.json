{"ast":null,"code":"'use client';\n\nimport { jsxs } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { avatarTheme } from './theme.js';\nconst AvatarGroupCounter = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([avatarTheme.groupCounter, provider.theme?.avatar?.groupCounter, props.theme], [get(provider.clearTheme, \"avatar.groupCounter\"), props.clearTheme], [get(provider.applyTheme, \"avatar.groupCounter\"), props.applyTheme]);\n  const {\n    className,\n    href,\n    total,\n    ...restProps\n  } = resolveProps(props, provider.props?.avatarGroupCounter);\n  return /* @__PURE__ */jsxs(\"a\", {\n    ref,\n    href,\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children: [\"+\", total]\n  });\n});\nAvatarGroupCounter.displayName = \"AvatarGroupCounter\";\nexport { AvatarGroupCounter };","map":{"version":3,"names":["AvatarGroupCounter","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","avatarTheme","groupCounter","avatar","get","clearTheme","applyTheme","className","href","total","restProps","resolveProps","avatarGroupCounter","jsxs","twMerge","base","children"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Avatar\\AvatarGroupCounter.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { avatarTheme } from \"./theme\";\n\nexport interface AvatarGroupCounterTheme {\n  base: string;\n}\n\nexport interface AvatarGroupCounterProps extends ComponentProps<\"a\">, ThemingProps<AvatarGroupCounterTheme> {\n  total?: number;\n}\n\nexport const AvatarGroupCounter = forwardRef<HTMLAnchorElement, AvatarGroupCounterProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [avatarTheme.groupCounter, provider.theme?.avatar?.groupCounter, props.theme],\n    [get(provider.clearTheme, \"avatar.groupCounter\"), props.clearTheme],\n    [get(provider.applyTheme, \"avatar.groupCounter\"), props.applyTheme],\n  );\n\n  const { className, href, total, ...restProps } = resolveProps(props, provider.props?.avatarGroupCounter);\n\n  return (\n    <a ref={ref} href={href} className={twMerge(theme.base, className)} {...restProps}>\n      +{total}\n    </a>\n  );\n});\n\nAvatarGroupCounter.displayName = \"AvatarGroupCounter\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,kBAAiB,GAAAC,UAAkB,EAAAC,KAAA,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAe,CAC3B,CAACC,WAAI,CAAQC,YAAW,EAAEL,QAAA,CAAAE,KAAA,EAAAI,MAAsB,EAAED,YAAM,EAAAP,KAAW,CAAAI,KAAA,GACnE,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,qBAAqB,CAAC,EAAEV,KAAK,CAACU,UAAU,GACnE,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,0BAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,SAAA;IAAAC,IAAuB;IAAAC,KAAK;IAAG,GAAIC;EAAS,CAAE,GAAAC,YAAW,CAAAhB,KAAQ,EAAAE,QAAY,CAAAF,KAAA,EAAAiB,kBAA0B;EACzG,OAAO,eAAAC,IAAA;IAAAjB,GAAA;IAAAY,IAAA;IAAAD,SAAA,EAAAO,OAAA,CAAAf,KAAA,CAAAgB,IAAA,EAAAR,SAAA;IAAA,GAAAG,SAAA;IAAAM,QAAA,GACH,KACDP,KAAG;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}