{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { hrTheme } from './theme.js';\nconst HRSquare = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([hrTheme.square, provider.theme?.hr?.square, props.theme], [get(provider.clearTheme, \"hr.square\"), props.clearTheme], [get(provider.applyTheme, \"hr.square\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.hrSquare);\n  return /* @__PURE__ */jsx(\"hr\", {\n    ref,\n    className: twMerge(theme.base, className),\n    \"data-testid\": \"flowbite-hr-square\",\n    role: \"separator\",\n    ...restProps\n  });\n});\nHRSquare.displayName = \"HRSquare\";\nexport { HRSquare };","map":{"version":3,"names":["HRSquare","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","hrTheme","square","hr","get","clearTheme","applyTheme","className","restProps","resolveProps","hrSquare","jsx","twMerge","base","role"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\HR\\HRSquare.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentProps } from \"react\";\nimport { forwardRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { hrTheme } from \"./theme\";\n\nexport interface HRSquareTheme {\n  base: string;\n}\n\nexport interface HRSquareProps extends Omit<ComponentProps<\"hr\">, \"ref\">, ThemingProps<HRSquareTheme> {}\n\nexport const HRSquare = forwardRef<HTMLHRElement, HRSquareProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [hrTheme.square, provider.theme?.hr?.square, props.theme],\n    [get(provider.clearTheme, \"hr.square\"), props.clearTheme],\n    [get(provider.applyTheme, \"hr.square\"), props.applyTheme],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.hrSquare);\n\n  return (\n    <hr\n      ref={ref}\n      className={twMerge(theme.base, className)}\n      data-testid=\"flowbite-hr-square\"\n      role=\"separator\"\n      {...restProps}\n    />\n  );\n});\n\nHRSquare.displayName = \"HRSquare\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,QAAM,GAAQC,UAAG,EAAAC,KAAA,EAAgBC,GAAE;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAQ,GAAAC,eAAiB,CAC1B,CAACC,OAAI,CAAAC,MAAS,EAAAL,QAAU,CAAEE,KAAA,EAAAI,EAAA,EAAWD,MAAG,EAAKP,KAAC,CAAAI,KAAU,CAAC,EACzD,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,WAAW,CAAC,EAAEV,KAAK,CAACU,UAAU,GACzD,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,gBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,SAAA;IAAA,GAAAC;EAA0B,IAAAC,YAAA,CAAAd,KAAA,EAAAE,QAAA,CAAAF,KAAA,EAAAe,QAAA;EAC5B,OAAQ,eAAAC,GAAA,CACJ,MACJ;IACMf,GAAA;IACAW,SAAA,EAAAK,OAAe,CAAAb,KAAA,CAAAc,IAAA,EAAAN,SAAoB;IACnC,aAAM,sBAAW;IACjBO,IAAG;IACT,GAAAN;EACG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}