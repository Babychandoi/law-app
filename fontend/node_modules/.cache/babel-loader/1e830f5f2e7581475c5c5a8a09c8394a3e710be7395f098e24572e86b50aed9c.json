{"ast":null,"code":"function range(start, end) {\n  if (start >= end) {\n    return [];\n  }\n  return [...Array(end - start + 1).keys()].map(key => key + start);\n}\nexport { range };","map":{"version":3,"names":["range","start","end","Array","keys","map","key"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Pagination\\helpers.ts"],"sourcesContent":["/**\n * Generates an array of sequential numbers from a start value to an end value (inclusive).\n * @param start - The starting number of the range\n * @param end - The ending number of the range\n * @returns An array of numbers from start to end. Returns empty array if start is greater than or equal to end.\n * @example\n * ```ts\n * range(1, 5) // returns [1, 2, 3, 4, 5]\n * range(5, 1) // returns []\n * ```\n */\nexport function range(start: number, end: number): number[] {\n  if (start >= end) {\n    return [];\n  }\n\n  return [...Array(end - start + 1).keys()].map((key: number): number => key + start);\n}\n"],"mappings":"AACO,SAASA,KAAKA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAChC,IAAID,KAAK,IAAIC,GAAG,EAAE;IAChB,OAAO,EAAE;EACb;EACE,OAAO,CAAC,GAAGC,KAAK,CAACD,GAAG,GAAGD,KAAK,GAAG,CAAC,CAAC,CAACG,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,GAAGL,KAAK,CAAC;AACrE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}