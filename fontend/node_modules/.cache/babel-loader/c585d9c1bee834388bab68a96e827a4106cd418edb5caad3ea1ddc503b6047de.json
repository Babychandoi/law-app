{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { deepmerge } from 'deepmerge-ts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { deepMergeStrings } from '../helpers/deep-merge.js';\nimport { twMerge } from '../helpers/tailwind-merge.js';\nconst ThemeProviderContext = createContext(void 0);\nfunction ThemeProvider({\n  children,\n  root,\n  props,\n  theme,\n  clearTheme,\n  applyTheme\n}) {\n  const parentProvider = useContext(ThemeProviderContext);\n  const value = useMemo(() => ({\n    props: !root && parentProvider?.props ? deepmerge(parentProvider?.props, props) : props,\n    theme: !root && parentProvider?.theme ? deepMergeStrings(twMerge)(parentProvider.theme, theme) : theme,\n    clearTheme: !root && parentProvider?.clearTheme ? deepmerge(parentProvider.clearTheme, clearTheme) : clearTheme,\n    applyTheme: !root && parentProvider?.applyTheme ? deepmerge(parentProvider?.applyTheme, applyTheme) : applyTheme\n  }), [root, props, theme, clearTheme, applyTheme, parentProvider?.props, parentProvider?.theme, parentProvider?.clearTheme, parentProvider?.applyTheme]);\n  return /* @__PURE__ */jsx(ThemeProviderContext.Provider, {\n    value,\n    children\n  });\n}\nThemeProvider.displayName = \"ThemeProvider\";\nfunction useThemeProvider() {\n  return useContext(ThemeProviderContext) ?? {};\n}\nexport { ThemeProvider, useThemeProvider };","map":{"version":3,"names":["ThemeProviderContext","createContext","ThemeProvider","children","root","props","theme","clearTheme","applyTheme","parentProvider","useContext","value","useMemo","deepmerge","deepMergeStrings","twMerge","jsx","Provider","displayName","useThemeProvider"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\theme\\provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { deepmerge } from \"deepmerge-ts\";\nimport { createContext, useContext, useMemo, type PropsWithChildren } from \"react\";\nimport { deepMergeStrings } from \"../helpers/deep-merge\";\nimport { twMerge } from \"../helpers/tailwind-merge\";\nimport type { FlowbiteProps, FlowbiteTheme, ThemingProps } from \"../types\";\n\nexport interface ThemeProviderValue extends ThemingProps<FlowbiteTheme> {\n  props?: Partial<FlowbiteProps>;\n}\n\nexport interface ThemeProviderProps extends ThemeProviderValue, PropsWithChildren {\n  /**\n   * Prevent merging with parent context value.\n   *\n   * @type {boolean}\n   * @default false\n   */\n  root?: boolean;\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderValue | undefined>(undefined);\n\nexport function ThemeProvider({ children, root, props, theme, clearTheme, applyTheme }: ThemeProviderProps) {\n  const parentProvider = useContext(ThemeProviderContext);\n  const value = useMemo(\n    () => ({\n      props: !root && parentProvider?.props ? deepmerge(parentProvider?.props, props) : props,\n      theme: !root && parentProvider?.theme ? deepMergeStrings(twMerge)(parentProvider.theme, theme) : theme,\n      clearTheme: !root && parentProvider?.clearTheme ? deepmerge(parentProvider.clearTheme, clearTheme) : clearTheme,\n      applyTheme: !root && parentProvider?.applyTheme ? deepmerge(parentProvider?.applyTheme, applyTheme) : applyTheme,\n    }),\n    [\n      root,\n      props,\n      theme,\n      clearTheme,\n      applyTheme,\n      parentProvider?.props,\n      parentProvider?.theme,\n      parentProvider?.clearTheme,\n      parentProvider?.applyTheme,\n    ],\n  );\n\n  return <ThemeProviderContext.Provider value={value}>{children}</ThemeProviderContext.Provider>;\n}\n\nThemeProvider.displayName = \"ThemeProvider\";\n\nexport function useThemeProvider() {\n  return useContext(ThemeProviderContext) ?? {};\n}\n"],"mappings":";;;;;;;AAQO,MAAAA,oBAAyB,GAAAC,aAAgB,MAAO;AACvD,SAAQC,aAAcA,CAAA;EAAGC,QAAA;EAAUC,IAAC;EAAAC,KAAA;EAAAC,KAAA;EAAAC,UAAqB;EAAAC;AAAA;EACvD,MAAMC,cAAQ,GAAOC,UAAA,CAAAV,oBAAA;EACvB,MAAIW,KAAO,GAAAC,OAAA,CACX,OAAW;IACLP,KAAK,EAAE,CAACD,IAAI,IAAIK,cAAc,EAAEJ,KAAK,GAAGQ,SAAA,CAAAJ,cAAwB,EAAEJ,KAAA,EAAAA,KAAA,IAAeA,KAAK;IACtFC,KAAA,GAAAF,IAAY,IAACK,cAAQ,EAAAH,KAAgB,GAAAQ,gBAAa,CAAAC,OAAU,EAAAN,cAAe,CAAAH,KAAU,EAAEA,KAAA,IAAUA,KAAI;IACrGC,UAAU,EAAE,CAACH,IAAI,IAAIK,cAAc,EAAEF,UAAU,GAAGM,SAAS,CAACJ,cAAc,CAAAF,UAAE,EAAUA,UAAE,CAAU,GAACA,UAAG;IACtGC,UAAA,GAAAJ,IAAA,IAAAK,cAAA,EAAAD,UAAA,GAAAK,SAAA,CAAAJ,cAAA,EAAAD,UAAA,EAAAA,UAAA,IAAAA;EACF,IACJ,CACMJ,IAAA,EACAC,KAAK,EACLC,KAAA,EACAC,UAAU,EACVC,UAAA,EACAC,cAAc,EAAEJ,KAAK,EACrBI,cAAc,EAAEH,KAAA,EAChBG,cAAc,EAAEF,UAAA,EACtBE,cAAA,EAAAD,UAAA,CAEE;EACF,sBAAAQ,GAAA,CAAAhB,oBAAA,CAAAiB,QAAA;IAAAN,KAAA;IAAAR;EAAA;AACA;AACOD,aAAS,CAAAgB,WAAgB,GAAG;AACnC,SAASC,gBAAWA,CAAA;EACpB,OAAAT,UAAA,CAAAV,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}