{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { footerTheme } from './theme.js';\nconst FooterBrand = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([footerTheme.brand, provider.theme?.footer?.brand, props.theme], [get(provider.clearTheme, \"footer.brand\"), props.clearTheme], [get(provider.applyTheme, \"footer.brand\"), props.applyTheme]);\n  const {\n    alt,\n    className,\n    children,\n    href,\n    name,\n    src,\n    ...restProps\n  } = resolveProps(props, provider.props?.footerBrand);\n  return /* @__PURE__ */jsx(\"div\", {\n    ref,\n    children: href ? /* @__PURE__ */jsxs(\"a\", {\n      \"data-testid\": \"flowbite-footer-brand\",\n      href,\n      className: twMerge(theme.base, className),\n      ...restProps,\n      children: [/* @__PURE__ */jsx(\"img\", {\n        alt,\n        src,\n        className: theme.img\n      }), /* @__PURE__ */jsx(\"span\", {\n        \"data-testid\": \"flowbite-footer-brand-span\",\n        className: theme.span,\n        children: name\n      }), children]\n    }) : /* @__PURE__ */jsx(\"img\", {\n      alt,\n      \"data-testid\": \"flowbite-footer-brand\",\n      src,\n      className: twMerge(theme.img, className),\n      ...restProps\n    })\n  });\n});\nFooterBrand.displayName = \"FooterBrand\";\nexport { FooterBrand };","map":{"version":3,"names":["FooterBrand","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","footerTheme","brand","footer","get","clearTheme","applyTheme","alt","className","children","href","name","src","restProps","resolveProps","footerBrand","jsx","jsxs","twMerge","base","img","span"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Footer\\FooterBrand.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { footerTheme } from \"./theme\";\n\nexport interface FooterBrandTheme {\n  base: string;\n  img: string;\n  span: string;\n}\n\ntype GenericLinkImageProps = ComponentProps<\"a\"> & ComponentProps<\"img\">;\n\nexport interface FooterBrandProps extends GenericLinkImageProps, ThemingProps<FooterBrandTheme> {\n  name?: string;\n  src: string;\n}\n\nexport const FooterBrand = forwardRef<HTMLDivElement, FooterBrandProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [footerTheme.brand, provider.theme?.footer?.brand, props.theme],\n    [get(provider.clearTheme, \"footer.brand\"), props.clearTheme],\n    [get(provider.applyTheme, \"footer.brand\"), props.applyTheme],\n  );\n\n  const { alt, className, children, href, name, src, ...restProps } = resolveProps(props, provider.props?.footerBrand);\n\n  return (\n    <div ref={ref}>\n      {href ? (\n        <a data-testid=\"flowbite-footer-brand\" href={href} className={twMerge(theme.base, className)} {...restProps}>\n          <img alt={alt} src={src} className={theme.img} />\n          <span data-testid=\"flowbite-footer-brand-span\" className={theme.span}>\n            {name}\n          </span>\n          {children}\n        </a>\n      ) : (\n        <img\n          alt={alt}\n          data-testid=\"flowbite-footer-brand\"\n          src={src}\n          className={twMerge(theme.img, className)}\n          {...restProps}\n        />\n      )}\n    </div>\n  );\n});\n\nFooterBrand.displayName = \"FooterBrand\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,WAAc,GAAGC,UAAA,EAAAC,KAAkB,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAQ,CACpB,CAACC,WAAI,CAAQC,KAAC,EAAAL,QAAY,CAAAE,KAAA,EAAAI,MAAe,EAAED,KAAM,EAAAP,KAAA,CAAAI,KAAW,GAC5D,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,cAAc,CAAC,EAAEV,KAAK,CAACU,UAAU,GAC5D,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,mBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,GAAA;IAAAC,SAAA;IAAuBC,QAAS;IAAEC,IAAE;IAAGC,IAAE;IAAAC,GAAQ;IAAE,GAAAC;EAAI,IAAAC,YAAwB,CAAAnB,KAAO,EAAAE,QAAA,CAAAF,KAAe,EAAAoB,WAAA;EACvG,sBAAwBC,GAAA,CAAK,KAAI,EAAG;IAAEpB,GAAG;IAAEa,QAAA,EAASC,IAAE,GAAM,eAAMO,IAAA;MAAA;MAAAP,IAAA;MAAAF,SAAA,EAAAU,OAAA,CAAAnB,KAAA,CAAAoB,IAAA,EAAAX,SAAA;MAAA,GAAAK,SAAA;MAAAJ,QAAA,GAClE,eAAoBO,GAAG,CAAC,OAAM;QAAET,GAAE;QAAAK,GAAA;QAAAJ,SAAe,EAAAT,KAAA,CAAAqB;MAAA,IAC7C,eAAAJ,GAAA;QAAA;QAAAR,SAAA,EAAAT,KAAA,CAAAsB,IAAA;QAAAZ,QAAA,EAAAE;MAAA,IACDF,QAAG;IACF,KAAK,eAAAO,GAAA,CACL,OACJ;MACMT,GAAA;MACA,aAAG;MACHK,GAAA;MACAJ,SAAG,EAAAU,OAAA,CAAAnB,KAAA,CAAAqB,GAAA,EAAAZ,SAAA;MACT,GAAAK;IACG,CACF;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}