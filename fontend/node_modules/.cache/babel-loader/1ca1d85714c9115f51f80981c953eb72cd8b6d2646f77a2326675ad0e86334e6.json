{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { footerTheme } from './theme.js';\nconst FooterDivider = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([footerTheme.divider, provider.theme?.footer?.divider, props.theme], [get(provider.clearTheme, \"footer.divider\"), props.clearTheme], [get(provider.applyTheme, \"footer.divider\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.footerDivider);\n  return /* @__PURE__ */jsx(\"hr\", {\n    ref,\n    \"data-testid\": \"footer-divider\",\n    className: twMerge(theme.base, className),\n    ...restProps\n  });\n});\nFooterDivider.displayName = \"FooterDivider\";\nexport { FooterDivider };","map":{"version":3,"names":["FooterDivider","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","footerTheme","divider","footer","get","clearTheme","applyTheme","className","restProps","resolveProps","footerDivider","jsx","twMerge","base"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Footer\\FooterDivider.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { footerTheme } from \"./theme\";\n\nexport interface FooterDividerTheme {\n  base: string;\n}\n\nexport interface FooterDividerProps extends ComponentProps<\"hr\">, ThemingProps<FooterDividerTheme> {}\n\nexport const FooterDivider = forwardRef<HTMLHRElement, FooterDividerProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [footerTheme.divider, provider.theme?.footer?.divider, props.theme],\n    [get(provider.clearTheme, \"footer.divider\"), props.clearTheme],\n    [get(provider.applyTheme, \"footer.divider\"), props.applyTheme],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.footerDivider);\n\n  return <hr ref={ref} data-testid=\"footer-divider\" className={twMerge(theme.base, className)} {...restProps} />;\n});\n\nFooterDivider.displayName = \"FooterDivider\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,aAAiB,GAAAC,UAAA,EAAAC,KAAkB,EAAAC,GAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAWC,eAAU,CACtB,CAACC,WAAI,CAAQC,OAAC,EAAAL,QAAY,CAAAE,KAAA,EAAAI,MAAiB,EAAED,OAAM,EAAAP,KAAA,CAAUI,KAAC,GAC9D,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,gBAAgB,CAAC,EAAEV,KAAK,CAACU,UAAU,GAC9D,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,qBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,SAAA;IAAA,GAAAC;EAA+B,CAAE,GAAEC,YAAK,CAAAd,KAAa,EAAEE,QAAA,CAAAF,KAAA,EAAgBe,aAAa;EACrF,sBAAAC,GAAA;IAAAf,GAAA;IAAA;IAAAW,SAAA,EAAAK,OAAA,CAAAb,KAAA,CAAAc,IAAA,EAAAN,SAAA;IAAA,GAAAC;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}