{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { Floating } from '../Floating/Floating.js';\nimport { tooltipTheme } from './theme.js';\nfunction Tooltip(props) {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([tooltipTheme, provider.theme?.tooltip, props.theme], [get(provider.clearTheme, \"tooltip\"), props.clearTheme], [get(provider.applyTheme, \"tooltip\"), props.applyTheme]);\n  const {\n    animation = \"duration-300\",\n    arrow = true,\n    children,\n    className,\n    content,\n    placement = \"top\",\n    style = \"dark\",\n    trigger = \"hover\",\n    ...restProps\n  } = resolveProps(props, provider.props?.tooltip);\n  return /* @__PURE__ */jsx(Floating, {\n    animation,\n    arrow,\n    content,\n    placement,\n    style,\n    theme,\n    trigger,\n    className,\n    ...restProps,\n    children\n  });\n}\nTooltip.displayName = \"Tooltip\";\nexport { Tooltip };","map":{"version":3,"names":["Tooltip","props","provider","useThemeProvider","theme","useResolveTheme","tooltipTheme","tooltip","get","clearTheme","applyTheme","animation","arrow","children","className","content","placement","style","trigger","restProps","resolveProps","jsx","Floating"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Tooltip\\Tooltip.tsx"],"sourcesContent":["\"use client\";\n\nimport type { Placement } from \"@floating-ui/core\";\nimport type { ComponentProps, ReactNode } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { Floating, type FloatingTheme } from \"../Floating\";\nimport { tooltipTheme } from \"./theme\";\n\nexport type TooltipTheme = FloatingTheme;\n\nexport interface TooltipProps extends Omit<ComponentProps<\"div\">, \"content\" | \"style\">, ThemingProps<TooltipTheme> {\n  animation?: false | `duration-${number}`;\n  arrow?: boolean;\n  content: ReactNode;\n  placement?: \"auto\" | Placement;\n  style?: \"dark\" | \"light\" | \"auto\";\n  trigger?: \"hover\" | \"click\";\n}\n\n/**\n * @see https://floating-ui.com/docs/react-dom-interactions\n */\nexport function Tooltip(props: TooltipProps) {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [tooltipTheme, provider.theme?.tooltip, props.theme],\n    [get(provider.clearTheme, \"tooltip\"), props.clearTheme],\n    [get(provider.applyTheme, \"tooltip\"), props.applyTheme],\n  );\n\n  const {\n    animation = \"duration-300\",\n    arrow = true,\n    children,\n    className,\n    content,\n    placement = \"top\",\n    style = \"dark\",\n    trigger = \"hover\",\n    ...restProps\n  } = resolveProps(props, provider.props?.tooltip);\n\n  return (\n    <Floating\n      animation={animation}\n      arrow={arrow}\n      content={content}\n      placement={placement}\n      style={style}\n      theme={theme}\n      trigger={trigger}\n      className={className}\n      {...restProps}\n    >\n      {children}\n    </Floating>\n  );\n}\n\nTooltip.displayName = \"Tooltip\";\n"],"mappings":";;;;;;;;;AAUA,SAAQA,OAAQA,CAAAC,KAAG;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAuB,CACxB,CAACC,YAAY,EAACJ,QAAA,CAAUE,KAAE,EAAAG,OAAY,EAAAN,KAAM,CAAAG,KAAA,GAC5C,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,SAAS,CAAC,EAAER,KAAK,CAACQ,UAAU,GACvD,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,cAAAT,KAAA,CAAAS,UAAA,CACD;EACF,MAAI;IACAC,SAAQ,GAAI;IACZC,KAAA,GAAQ;IACRC,QAAA;IACAC,SAAO;IACPC,OAAA;IACAC,SAAQ,QAAM;IACdC,KAAA,GAAO,MAAG;IACVC,OAAG;IACJ,GAAGC;EACJ,IAAAC,YAAA,CAAAnB,KAAA,EAAuBC,QAAG,CAAAD,KAAA,EAAAM,OAAA;EAC5B,OAAI,eAAQc,GAAA,CACRC,QAAA,EACJ;IACMX,SAAK;IACLC,KAAA;IACAG,OAAA;IACAC,SAAK;IACLC,KAAK;IACLb,KAAA;IACAc,OAAA;IACAJ,SAAG;IACH,GAAAK,SAAA;IACNN;EACG,CACH;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}