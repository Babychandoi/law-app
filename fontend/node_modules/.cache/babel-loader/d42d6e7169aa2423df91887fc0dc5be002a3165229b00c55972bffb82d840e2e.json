{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useDrawerContext } from './DrawerContext.js';\nimport { drawerTheme } from './theme.js';\nconst DrawerItems = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme\n  } = useDrawerContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([drawerTheme.items, provider.theme?.drawer?.items, rootTheme?.items, props.theme], [get(provider.clearTheme, \"drawer.items\"), get(rootClearTheme, \"items\"), props.clearTheme], [get(provider.applyTheme, \"drawer.items\"), get(rootApplyTheme, \"items\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.drawerItems);\n  return /* @__PURE__ */jsx(\"div\", {\n    ref,\n    \"data-testid\": \"flowbite-drawer-items\",\n    className: twMerge(theme.base, className),\n    ...restProps,\n    children\n  });\n});\nDrawerItems.displayName = \"DrawerItems\";\nexport { DrawerItems };","map":{"version":3,"names":["DrawerItems","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","useDrawerContext","provider","useThemeProvider","useResolveTheme","drawerTheme","items","drawer","get","children","className","restProps","resolveProps","drawerItems","jsx","twMerge","base"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Drawer\\DrawerItems.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { useDrawerContext } from \"./DrawerContext\";\nimport { drawerTheme } from \"./theme\";\n\nexport interface DrawerItemsTheme {\n  base: string;\n}\n\nexport interface DrawerItemsProps extends ComponentProps<\"div\">, ThemingProps<DrawerItemsTheme> {}\n\nexport const DrawerItems = forwardRef<HTMLDivElement, DrawerItemsProps>((props, ref) => {\n  const { theme: rootTheme, clearTheme: rootClearTheme, applyTheme: rootApplyTheme } = useDrawerContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [drawerTheme.items, provider.theme?.drawer?.items, rootTheme?.items, props.theme],\n    [get(provider.clearTheme, \"drawer.items\"), get(rootClearTheme, \"items\"), props.clearTheme],\n    [get(provider.applyTheme, \"drawer.items\"), get(rootApplyTheme, \"items\"), props.applyTheme],\n  );\n\n  const { children, className, ...restProps } = resolveProps(props, provider.props?.drawerItems);\n\n  return (\n    <div ref={ref} data-testid=\"flowbite-drawer-items\" className={twMerge(theme.base, className)} {...restProps}>\n      {children}\n    </div>\n  );\n});\n\nDrawerItems.displayName = \"DrawerItems\";\n"],"mappings":";;;;;;;;;;;AAYA,MAAEA,WAAe,GAAAC,UAAW,EAAAC,KAAA,EAAUC,GAAE;EACtC,MAAM;IAAAC,KAAA,EAAQC,SAAG;IAAAC,UAAkB,EAAAC,cAAA;IAAAC,UAAA,EAAAC;EAAA,IAAAC,gBAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKR,KAAA,GAAWS,eAAQ,CACpB,CAACC,WAAI,CAAQC,KAAC,EAAAJ,QAAY,CAAAP,KAAA,EAAAY,MAAe,EAAED,KAAI,EAAAV,SAAA,EAAcU,KAAE,EAAAb,KAAU,CAAAE,KAAM,GAC/E,CAACa,GAAG,CAACN,QAAQ,CAACL,UAAU,EAAE,cAAc,CAAC,EAAEW,GAAG,CAACV,cAAc,EAAE,OAAO,CAAC,EAAEL,KAAK,CAACI,UAAU,GAC1F,CAAAW,GAAA,CAAAN,QAAA,CAAAH,UAAA,mBAAAS,GAAA,CAAAR,cAAA,YAAAP,KAAA,CAAAM,UAAA,CACD;EACA;IAAAU,QAAA;IAAAC,SAA2B;IAAA,GAAKC;EAAS,IAAAC,YAAe,CAAAnB,KAAA,EAAAS,QAAA,CAAAT,KAAuB,EAAEoB,WAAW;EAC7F,sBAAAC,GAAA;IAAApB,GAAA;IAAA;IAAAgB,SAAA,EAAAK,OAAA,CAAApB,KAAA,CAAAqB,IAAA,EAAAN,SAAA;IAAA,GAAAC,SAAA;IAAAF;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}