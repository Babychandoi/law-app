{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { floatingLabelTheme } from './theme.js';\nconst FloatingLabel = forwardRef((props, ref) => {\n  const randomId = useId();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([floatingLabelTheme, provider.theme?.floatingLabel, props.theme], [get(provider.clearTheme, \"floatingLabel\"), props.clearTheme], [get(provider.applyTheme, \"floatingLabel\"), props.applyTheme]);\n  const {\n    label,\n    color = \"default\",\n    sizing = \"md\",\n    variant,\n    disabled = false,\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.floatingLabel);\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: twMerge(\"relative\", variant === \"standard\" ? \"z-0\" : \"\"),\n    children: [/* @__PURE__ */jsx(\"input\", {\n      type: \"text\",\n      id: \"floatingLabel\" + randomId,\n      \"aria-describedby\": \"outlined_success_help\",\n      className: twMerge(theme.input[color][variant][sizing], className),\n      placeholder: \" \",\n      \"data-testid\": \"floating-label\",\n      disabled,\n      ...restProps,\n      ref\n    }), /* @__PURE__ */jsx(\"label\", {\n      htmlFor: \"floatingLabel\" + randomId,\n      className: twMerge(theme.label[color][variant][sizing], className),\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = \"FloatingLabel\";\nexport { FloatingLabel };","map":{"version":3,"names":["FloatingLabel","forwardRef","props","ref","randomId","useId","provider","useThemeProvider","theme","useResolveTheme","floatingLabelTheme","floatingLabel","get","clearTheme","applyTheme","label","color","sizing","variant","disabled","className","restProps","resolveProps","jsxs","twMerge","children","jsx","type","id","input","placeholder","htmlFor"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\FloatingLabel\\FloatingLabel.tsx"],"sourcesContent":["\"use client\";\n\nimport type { ComponentPropsWithoutRef } from \"react\";\nimport { forwardRef, useId } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { floatingLabelTheme, type FloatingLabelTheme } from \"./theme\";\n\nexport type FloatingLabelColor = \"default\" | \"success\" | \"error\";\nexport type FloatingLabelSizing = \"sm\" | \"md\";\nexport type FloatingLabelVariant = \"filled\" | \"outlined\" | \"standard\";\n\nexport interface FloatingLabelProps extends ComponentPropsWithoutRef<\"input\">, ThemingProps<FloatingLabelTheme> {\n  label: string;\n  color?: FloatingLabelColor;\n  sizing?: FloatingLabelSizing;\n  variant: FloatingLabelVariant;\n  disabled?: boolean;\n}\n\nexport const FloatingLabel = forwardRef<HTMLInputElement, FloatingLabelProps>((props, ref) => {\n  const randomId = useId();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [floatingLabelTheme, provider.theme?.floatingLabel, props.theme],\n    [get(provider.clearTheme, \"floatingLabel\"), props.clearTheme],\n    [get(provider.applyTheme, \"floatingLabel\"), props.applyTheme],\n  );\n\n  const {\n    label,\n    color = \"default\",\n    sizing = \"md\",\n    variant,\n    disabled = false,\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.floatingLabel);\n\n  return (\n    <div className={twMerge(\"relative\", variant === \"standard\" ? \"z-0\" : \"\")}>\n      <input\n        type=\"text\"\n        id={\"floatingLabel\" + randomId}\n        aria-describedby=\"outlined_success_help\"\n        className={twMerge(theme.input[color][variant][sizing], className)}\n        placeholder=\" \"\n        data-testid=\"floating-label\"\n        disabled={disabled}\n        {...restProps}\n        ref={ref}\n      />\n      <label htmlFor={\"floatingLabel\" + randomId} className={twMerge(theme.label[color][variant][sizing], className)}>\n        {label}\n      </label>\n    </div>\n  );\n});\n\nFloatingLabel.displayName = \"FloatingLabel\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,aAAiB,GAAAC,UAAO,EAAAC,KAAA,EAAAC,GAAA;EACxB,MAAMC,QAAQ,GAAGC,KAAA;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAoB,CACrB,CAACC,kBAAa,EAAAJ,QAAY,CAAAE,KAAA,EAAAG,aAAwB,EAAAT,KAAA,CAAAM,KAAW,GAC7D,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,eAAe,CAAC,EAAEX,KAAK,CAACW,UAAU,GAC7D,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,oBAAAZ,KAAA,CAAAY,UAAA,CACD;EACF,MAAI;IACAC,KAAK;IACLC,KAAA,GAAM,SAAO;IACbC,MAAA,GAAO;IACPC,OAAA;IACAC,QAAA,GAAS;IACTC,SAAG;IACJ,GAAGC;EACJ,IAAAC,YAAA,CAAApB,KAAA,EAAuBI,QAAK,CAAKJ,KAAI,EAAAS,aAAW;EAClD,sBAAuBY,IAAA;IAAAH,SAAA,EAAAI,OAAA,aAAAN,OAAA;IAAAO,QAAA,GACvB,eAAaC,GAAA,CACP,SACN;MACQC,IAAI;MACJC,EAAA,iBAAkB,GAAExB,QAAA;MACpB,kBAAkB,EAAC,uBAAmB;MACtCgB,SAAA,EAAWI,OAAK,CAAAhB,KAAA,CAAAqB,KAAA,CAAAb,KAAA,EAAAE,OAAA,EAAAD,MAAA,GAAAG,SAAA;MAChBU,WAAA,EAAa,GAAE;MACf,aAAQ;MACRX,QAAG;MACH,GAAAE,SAAA;MACRlB;IACK,CACL,GACG,eAAGuB,GAAA;MAAAK,OAAA,oBAAA3B,QAAA;MAAAgB,SAAA,EAAAI,OAAA,CAAAhB,KAAA,CAAAO,KAAA,CAAAC,KAAA,EAAAE,OAAA,EAAAD,MAAA,GAAAG,SAAA;MAAAK,QAAA,EAAAV;IAAA;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}