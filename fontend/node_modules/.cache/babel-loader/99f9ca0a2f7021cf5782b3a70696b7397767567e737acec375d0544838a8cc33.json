{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from '../../../helpers/tailwind-merge.js';\nimport { useDatePickerContext } from '../DatepickerContext.js';\nimport { startOfYearPeriod, addYears, isDateInDecade, isDateInRange, Views } from '../helpers.js';\nfunction DatepickerViewsDecades() {\n  const {\n    theme: rootTheme,\n    viewDate,\n    selectedDate,\n    minDate,\n    maxDate,\n    setViewDate,\n    setView\n  } = useDatePickerContext();\n  const theme = rootTheme.views.decades;\n  const first = startOfYearPeriod(viewDate, 100);\n  return /* @__PURE__ */jsx(\"div\", {\n    className: theme.items.base,\n    children: [...Array(12)].map((_year, index) => {\n      const year = first - 10 + index * 10;\n      const newDate = new Date(viewDate.getTime());\n      newDate.setFullYear(year + viewDate.getFullYear() % 10);\n      const firstDate = new Date(year, 0, 1);\n      const lastDate = addYears(firstDate, 9);\n      const isSelected = selectedDate && isDateInDecade(selectedDate, year);\n      const isDisabled = !isDateInRange(firstDate, minDate, maxDate) && !isDateInRange(lastDate, minDate, maxDate);\n      return /* @__PURE__ */jsx(\"button\", {\n        disabled: isDisabled,\n        type: \"button\",\n        className: twMerge(theme.items.item.base, isSelected && theme.items.item.selected, isDisabled && theme.items.item.disabled),\n        onClick: () => {\n          if (isDisabled) return;\n          selectedDate && setViewDate(addYears(viewDate, year - selectedDate.getFullYear()));\n          setView(Views.Years);\n        },\n        children: year\n      }, index);\n    })\n  });\n}\nDatepickerViewsDecades.displayName = \"DatepickerViewsDecades\";\nexport { DatepickerViewsDecades };","map":{"version":3,"names":["DatepickerViewsDecades","theme","rootTheme","viewDate","selectedDate","minDate","maxDate","setViewDate","setView","useDatePickerContext","views","decades","first","startOfYearPeriod","jsx","className","items","base","children","Array","map","_year","index","year","newDate","Date","getTime","setFullYear","getFullYear","firstDate","lastDate","addYears","isSelected","isDateInDecade","isDisabled","isDateInRange","disabled","type","twMerge","item","selected","onClick","Views","Years"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Datepicker\\Views\\Decades.tsx"],"sourcesContent":["\"use client\";\n\nimport { twMerge } from \"../../../helpers/tailwind-merge\";\nimport { useDatePickerContext } from \"../DatepickerContext\";\nimport { addYears, isDateInDecade, isDateInRange, startOfYearPeriod, Views } from \"../helpers\";\n\nexport interface DatepickerViewsDecadesTheme {\n  items: {\n    base: string;\n    item: {\n      base: string;\n      selected: string;\n      disabled: string;\n    };\n  };\n}\n\nexport function DatepickerViewsDecades() {\n  const { theme: rootTheme, viewDate, selectedDate, minDate, maxDate, setViewDate, setView } = useDatePickerContext();\n\n  const theme = rootTheme.views.decades;\n  const first = startOfYearPeriod(viewDate, 100);\n\n  return (\n    <div className={theme.items.base}>\n      {[...Array(12)].map((_year, index) => {\n        const year = first - 10 + index * 10;\n        const newDate = new Date(viewDate.getTime());\n        newDate.setFullYear(year + (viewDate.getFullYear() % 10));\n        const firstDate = new Date(year, 0, 1);\n        const lastDate = addYears(firstDate, 9);\n\n        const isSelected = selectedDate && isDateInDecade(selectedDate, year);\n        const isDisabled = !isDateInRange(firstDate, minDate, maxDate) && !isDateInRange(lastDate, minDate, maxDate);\n\n        return (\n          <button\n            disabled={isDisabled}\n            key={index}\n            type=\"button\"\n            className={twMerge(\n              theme.items.item.base,\n              isSelected && theme.items.item.selected,\n              isDisabled && theme.items.item.disabled,\n            )}\n            onClick={() => {\n              if (isDisabled) return;\n\n              selectedDate && setViewDate(addYears(viewDate, year - selectedDate.getFullYear()));\n              setView(Views.Years);\n            }}\n          >\n            {year}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nDatepickerViewsDecades.displayName = \"DatepickerViewsDecades\";\n"],"mappings":";;;;;;AAOA,SAAQA,sBAAoBA,CAAA;EAC1B,MAAM;IAAAC,KAAK,EAAGC,SAAU;IAAAC,QAAM;IAAAC,YAAO;IAAAC,OAAA;IAAAC,OAAA;IAAAC,WAAA;IAAAC;EAAA,IAAAC,oBAAA;EACrC,MAAMR,KAAK,GAAGC,SAAA,CAAAQ,KAAA,CAAAC,OAAkB;EAChC,MAAAC,KAAA,GAAAC,iBAA2B,CAAKV,QAAI,KAAS;EAC/C,OAAI,eAAqBW,GAAE,MAAG,EAAK;IAAGC,SAAE,EAAAd,KAAA,CAAAe,KAAA,CAAAC,IAAA;IAAAC,QAAA,MAAAC,KAAA,MAAAC,GAAA,EAAAC,KAAA,EAAAC,KAAA;MACpC,MAAMC,IAAA,GAAOX,KAAG,GAAI,KAAKU,KAAA,GAAS;MAClC,MAAAE,OAAQ,OAAYC,IAAI,CAAAtB,QAAG,CAAAuB,OAAS;MACpCF,OAAM,CAAAG,WAAY,CAAAJ,IAAI,GAAKpB,QAAO,CAAEyB,WAAE;MACtC,MAAMC,SAAQ,GAAG,IAAAJ,IAAS,CAAAF,IAAA,KAAS,CAAE,CAAC;MACtC,MAAMO,QAAA,GAAUC,QAAG,CAAAF,SAAgB;MACnC,MAAMG,UAAU,GAAG5B,YAAC,IAAc6B,cAAW,CAAA7B,YAAiB,EAAAmB,IAAK;MACnE,MAAAW,UAAA,IAAAC,aAA0B,CAAAN,SAAA,EAAAxB,OAAA,EAAAC,OAAA,MAAA6B,aAAA,CAAAL,QAAA,EAAAzB,OAAA,EAAAC,OAAA;MAC9B,OAAM,eAAQQ,GAAA,CACR,UACN;QACQsB,QAAM,EAAAF,UAAQ;QACdG,IAAA,UAAW;QACnBtB,SAAgB,EAAAuB,OAAU,CAChBrC,KAAA,CAAAe,KAAU,CAAAuB,IAAI,CAAAtB,IAAM,EACpBe,UAAU,IAAI/B,KAAK,CAACe,KAAK,CAACuB,IAAI,CAACC,QAAA,EAChCN,UAAA,IAAAjC,KAAA,CAAAe,KAAA,CAAAuB,IAAA,CAAAH,QACD;QACRK,OAAc,EAAAA,CAAA;UACJ,IAAAP,UAAY,EAAI;UAChB9B,YAAQ,IAAMG,WAAM,CAAAwB,QAAA,CAAA5B,QAAA,EAAAoB,IAAA,GAAAnB,YAAA,CAAAwB,WAAA;UACrBpB,OAAA,CAAAkC,KAAA,CAAAC,KAAA;QACD;QACDzB,QAAA,EAAAK;MACD,GACDD,KACD;IACJ;EAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}