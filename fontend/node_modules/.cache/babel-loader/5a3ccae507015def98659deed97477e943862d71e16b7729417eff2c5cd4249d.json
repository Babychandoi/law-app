{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { Navbar } from '../Navbar/Navbar.js';\nimport '../Navbar/NavbarBrand.js';\nimport '../Navbar/NavbarCollapse.js';\nimport '../Navbar/NavbarContext.js';\nimport '../Navbar/NavbarLink.js';\nimport '../Navbar/NavbarToggle.js';\nimport { megaMenuTheme } from './theme.js';\nconst MegaMenu = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([megaMenuTheme, provider.theme?.megaMenu, props.theme], [get(provider.clearTheme, \"megaMenu\"), props.clearTheme], [get(provider.applyTheme, \"megaMenu\"), props.applyTheme]);\n  const mergedProps = resolveProps(props, provider.props?.megaMenu);\n  return /* @__PURE__ */jsx(Navbar, {\n    ref,\n    theme,\n    fluid: true,\n    ...mergedProps\n  });\n});\nMegaMenu.displayName = \"MegaMenu\";\nexport { MegaMenu };","map":{"version":3,"names":["MegaMenu","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","megaMenuTheme","megaMenu","get","clearTheme","applyTheme","mergedProps","resolveProps","jsx","Navbar","fluid"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\MegaMenu\\MegaMenu.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { NavbarProps, NavbarTheme } from \"../Navbar\";\nimport { Navbar } from \"../Navbar\";\nimport type { MegaMenuDropdownTheme } from \"./MegaMenuDropdown\";\nimport type { MegaMenuDropdownToggleTheme } from \"./MegaMenuDropdownToggle\";\nimport { megaMenuTheme } from \"./theme\";\n\nexport interface MegaMenuTheme extends NavbarTheme {\n  dropdown: MegaMenuDropdownTheme;\n  dropdownToggle: MegaMenuDropdownToggleTheme;\n}\n\nexport type MegaMenuProps = NavbarProps;\n\nexport const MegaMenu = forwardRef<HTMLElement, MegaMenuProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [megaMenuTheme, provider.theme?.megaMenu, props.theme],\n    [get(provider.clearTheme, \"megaMenu\"), props.clearTheme],\n    [get(provider.applyTheme, \"megaMenu\"), props.applyTheme],\n  );\n\n  const mergedProps = resolveProps(props, provider.props?.megaMenu);\n\n  return <Navbar ref={ref} theme={theme} fluid {...mergedProps} />;\n});\n\nMegaMenu.displayName = \"MegaMenu\";\n"],"mappings":";;;;;;;;;;;;;;;AAWA,MAAEA,QAAM,GAAQC,UAAG,EAAAC,KAAA,EAAgBC,GAAE;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAAC,eAAwB,CACzB,CAACC,aAAa,EAAAJ,QAAU,CAAAE,KAAE,EAAAG,QAAa,EAAAP,KAAM,CAAAI,KAAA,GAC7C,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,UAAU,CAAC,EAAET,KAAK,CAACS,UAAU,GACxD,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,eAAAV,KAAA,CAAAU,UAAA,CACD;EACA,MAAAC,WAAA,GAAAC,YAA2B,CAAMZ,KAAI,EAAGE,QAAO,CAAEF,KAAK,EAAEO,QAAM,CAAG;EAClE,sBAAAM,GAAA,CAAAC,MAAA;IAAAb,GAAA;IAAAG,KAAA;IAAAW,KAAA;IAAA,GAAAJ;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}