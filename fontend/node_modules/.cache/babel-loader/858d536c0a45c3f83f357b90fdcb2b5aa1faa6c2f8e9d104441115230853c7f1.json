{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080\";\nexport const getServices = async () => {\n  const response = await axios.get(`${API_URL}/services`);\n  return response.data;\n};\nexport const getChildrenServiceById = async id => {\n  const response = await axios.get(`${API_URL}/services/${id}`);\n  return response.data;\n};\nexport const getPricingByServiceId = async id => {\n  const response = await axios.get(`${API_URL}/services/fee/${id}`);\n  return response.data;\n};\nexport const getHeroByServiceId = async id => {\n  const response = await axios.get(`${API_URL}/service/hero/${id}`);\n  return response.data;\n};\nexport const getProcessByServiceId = async id => {\n  const response = await axios.get(`${API_URL}/services/process/${id}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getServices","response","get","data","getChildrenServiceById","id","getPricingByServiceId","getHeroByServiceId","getProcessByServiceId"],"sources":["C:/Users/phong/Documents/GitHub/law-app/fontend/src/service/service.ts"],"sourcesContent":["\nimport axios from \"axios\";\nimport { Hero, Process, ServiceResponse } from \"../types/service\";\nimport { ChildrenServiceResponse } from \"../types/service\";\nimport { ApiResponse } from \"../types/types\";\nconst API_URL = \"http://localhost:8080\";\n\nexport const getServices = async (): Promise<ApiResponse<ServiceResponse[]>> => {\n\t\tconst response = await axios.get<ApiResponse<ServiceResponse[]>>(`${API_URL}/services`);\n\t\treturn response.data;\n}\nexport const getChildrenServiceById = async (id: string): Promise<ApiResponse<ChildrenServiceResponse[]>> => {\n\tconst response = await axios.get<ApiResponse<ChildrenServiceResponse[]>>(`${API_URL}/services/${id}`);\n\treturn response.data;\n}\nexport const getPricingByServiceId = async (id: string): Promise<ApiResponse<any>> => {\n\tconst response = await axios.get<ApiResponse<any>>(`${API_URL}/services/fee/${id}`);\n\treturn response.data;\n}\nexport const getHeroByServiceId = async (id: string): Promise<ApiResponse<Hero>> => {\n\tconst response = await axios.get<ApiResponse<Hero>>(`${API_URL}/service/hero/${id}`);\n\treturn response.data;\n}\nexport const getProcessByServiceId = async (id: string): Promise<ApiResponse<Process>> => {\n\tconst response = await axios.get<ApiResponse<Process>>(`${API_URL}/services/process/${id}`);\n\treturn response.data;\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAqD;EAC9E,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAiC,GAAGH,OAAO,WAAW,CAAC;EACvF,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AACD,OAAO,MAAMC,sBAAsB,GAAG,MAAOC,EAAU,IAAsD;EAC5G,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAyC,GAAGH,OAAO,aAAaM,EAAE,EAAE,CAAC;EACrG,OAAOJ,QAAQ,CAACE,IAAI;AACrB,CAAC;AACD,OAAO,MAAMG,qBAAqB,GAAG,MAAOD,EAAU,IAAgC;EACrF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAmB,GAAGH,OAAO,iBAAiBM,EAAE,EAAE,CAAC;EACnF,OAAOJ,QAAQ,CAACE,IAAI;AACrB,CAAC;AACD,OAAO,MAAMI,kBAAkB,GAAG,MAAOF,EAAU,IAAiC;EACnF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAoB,GAAGH,OAAO,iBAAiBM,EAAE,EAAE,CAAC;EACpF,OAAOJ,QAAQ,CAACE,IAAI;AACrB,CAAC;AACD,OAAO,MAAMK,qBAAqB,GAAG,MAAOH,EAAU,IAAoC;EACzF,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAuB,GAAGH,OAAO,qBAAqBM,EAAE,EAAE,CAAC;EAC3F,OAAOJ,QAAQ,CAACE,IAAI;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}