{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { kbdTheme } from './theme.js';\nconst Kbd = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([kbdTheme, provider.theme?.kbd, props.theme], [get(provider.clearTheme, \"kbd\"), props.clearTheme], [get(provider.applyTheme, \"kbd\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    icon: Icon,\n    ...restProps\n  } = resolveProps(props, provider.props?.hr);\n  return /* @__PURE__ */jsxs(\"span\", {\n    ref,\n    className: twMerge(theme.root.base, className),\n    \"data-testid\": \"flowbite-kbd\",\n    ...restProps,\n    children: [Icon && /* @__PURE__ */jsx(Icon, {\n      className: theme.root.icon,\n      \"data-testid\": \"flowbite-kbd-icon\"\n    }), children]\n  });\n});\nKbd.displayName = \"Kbd\";\nexport { Kbd };","map":{"version":3,"names":["Kbd","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","kbdTheme","kbd","get","clearTheme","applyTheme","children","className","icon","Icon","restProps","resolveProps","hr","jsxs","twMerge","root","base","jsx"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Kbd\\Kbd.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type FC } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { kbdTheme } from \"./theme\";\n\nexport interface KbdTheme {\n  root: KbdRootTheme;\n}\n\nexport interface KbdRootTheme {\n  base: string;\n  icon: string;\n}\n\nexport interface KbdProps extends ComponentProps<\"span\">, ThemingProps<KbdTheme> {\n  icon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const Kbd = forwardRef<HTMLSpanElement, KbdProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [kbdTheme, provider.theme?.kbd, props.theme],\n    [get(provider.clearTheme, \"kbd\"), props.clearTheme],\n    [get(provider.applyTheme, \"kbd\"), props.applyTheme],\n  );\n\n  const { children, className, icon: Icon, ...restProps } = resolveProps(props, provider.props?.hr);\n\n  return (\n    <span ref={ref} className={twMerge(theme.root.base, className)} data-testid=\"flowbite-kbd\" {...restProps}>\n      {Icon && <Icon className={theme.root.icon} data-testid=\"flowbite-kbd-icon\" />}\n      {children}\n    </span>\n  );\n});\n\nKbd.displayName = \"Kbd\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,GAAM,GAAAC,UAAW,EAAAC,KAAA,EAAAC,GAAA,KAAkB;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAQ,GAAEC,eAAgB,CAC3B,CAACC,QAAI,EAAAJ,QAAS,CAAAE,KAAU,EAAEG,GAAA,EAAMP,KAAE,CAAAI,KAAM,GACxC,CAACI,GAAG,CAACN,QAAQ,CAACO,UAAU,EAAE,KAAK,CAAC,EAAET,KAAK,CAACS,UAAU,GACnD,CAAAD,GAAA,CAAAN,QAAA,CAAAQ,UAAA,UAAAV,KAAA,CAAAU,UAAA,CACD;EACA;IAAAC,QAAA;IAAAC,SAA2B;IAACC,IAAA,EAAMC,IAAI;IAAG,GAAEC;EAAW,IAAAC,YAAc,CAAAhB,KAAK,EAAIE,QAAE,CAAAF,KAAY,EAAAiB,EAAA;EAC7F,OAAQ,eAAAC,IAAoB,OAAQ,EAAE;IAAEjB,GAAA;IAAAW,SAAW,EAAKO,OAAM,CAAAf,KAAM,CAAAgB,IAAA,CAAAC,IAAA,EAAaT,SAAE;IAAA,aAAsB;IAAA,GAAAG,SAAA;IAAAJ,QAAA,GACrGG,IAAA,mBAAAQ,GAAA,CAAAR,IAAA;MAAAF,SAAA,EAAAR,KAAA,CAAAgB,IAAA,CAAAP,IAAA;MAAA;IAAA,IACDF,QAAG;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}