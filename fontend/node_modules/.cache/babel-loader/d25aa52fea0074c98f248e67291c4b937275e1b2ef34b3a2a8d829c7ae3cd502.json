{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { timelineTheme } from './theme.js';\nimport { TimelineContentContext } from './TimelineContentContext.js';\nimport { useTimelineContext } from './TimelineContext.js';\nimport { useTimelineItemContext } from './TimelineItemContext.js';\nconst TimelineContent = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    horizontal\n  } = useTimelineContext();\n  const {\n    theme: itemTheme,\n    clearTheme: itemClearTheme,\n    applyTheme: itemApplyTheme\n  } = useTimelineItemContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([timelineTheme.item.content, provider.theme?.timeline?.item?.content, rootTheme?.item?.content, itemTheme?.content, props.theme], [get(provider.clearTheme, \"timeline.item.content\"), get(rootClearTheme, \"item.content\"), get(itemClearTheme, \"content\"), props.clearTheme], [get(provider.applyTheme, \"timeline.item.content\"), get(rootApplyTheme, \"item.content\"), get(itemApplyTheme, \"content\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.timelineContent);\n  return /* @__PURE__ */jsx(TimelineContentContext.Provider, {\n    value: {\n      theme: props.theme,\n      clearTheme: props.clearTheme,\n      applyTheme: props.applyTheme\n    },\n    children: /* @__PURE__ */jsx(\"div\", {\n      ref,\n      \"data-testid\": \"timeline-content\",\n      className: twMerge(theme.root.base, horizontal ? theme.root.horizontal : theme.root.vertical, className),\n      ...restProps\n    })\n  });\n});\nTimelineContent.displayName = \"TimelineContent\";\nexport { TimelineContent };","map":{"version":3,"names":["TimelineContent","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","horizontal","useTimelineContext","itemTheme","itemClearTheme","itemApplyTheme","useTimelineItemContext","provider","useThemeProvider","useResolveTheme","timelineTheme","item","content","timeline","get","className","restProps","resolveProps","timelineContent","jsx","TimelineContentContext","Provider","value","children","twMerge","root","base","vertical"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Timeline\\TimelineContent.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { timelineTheme } from \"./theme\";\nimport type { TimelineBodyTheme } from \"./TimelineBody\";\nimport { TimelineContentContext } from \"./TimelineContentContext\";\nimport { useTimelineContext } from \"./TimelineContext\";\nimport { useTimelineItemContext } from \"./TimelineItemContext\";\nimport type { TimelineTimeTheme } from \"./TimelineTime\";\nimport type { TimelineTitleTheme } from \"./TimelineTitle\";\n\nexport interface TimelineContentTheme {\n  root: {\n    base: string;\n    horizontal: string;\n    vertical: string;\n  };\n  time: TimelineTitleTheme;\n  title: TimelineTimeTheme;\n  body: TimelineBodyTheme;\n}\n\nexport interface TimelineContentProps extends ComponentProps<\"div\">, ThemingProps<TimelineContentTheme> {}\n\nexport const TimelineContent = forwardRef<HTMLDivElement, TimelineContentProps>((props, ref) => {\n  const { theme: rootTheme, clearTheme: rootClearTheme, applyTheme: rootApplyTheme, horizontal } = useTimelineContext();\n  const { theme: itemTheme, clearTheme: itemClearTheme, applyTheme: itemApplyTheme } = useTimelineItemContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [\n      timelineTheme.item.content,\n      provider.theme?.timeline?.item?.content,\n      rootTheme?.item?.content,\n      itemTheme?.content,\n      props.theme,\n    ],\n    [\n      get(provider.clearTheme, \"timeline.item.content\"),\n      get(rootClearTheme, \"item.content\"),\n      get(itemClearTheme, \"content\"),\n      props.clearTheme,\n    ],\n    [\n      get(provider.applyTheme, \"timeline.item.content\"),\n      get(rootApplyTheme, \"item.content\"),\n      get(itemApplyTheme, \"content\"),\n      props.applyTheme,\n    ],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.timelineContent);\n\n  return (\n    <TimelineContentContext.Provider\n      value={{ theme: props.theme, clearTheme: props.clearTheme, applyTheme: props.applyTheme }}\n    >\n      <div\n        ref={ref}\n        data-testid=\"timeline-content\"\n        className={twMerge(theme.root.base, horizontal ? theme.root.horizontal : theme.root.vertical, className)}\n        {...restProps}\n      />\n    </TimelineContentContext.Provider>\n  );\n});\n\nTimelineContent.displayName = \"TimelineContent\";\n"],"mappings":";;;;;;;;;;;;;AAcA,MAAEA,eAAe,GAAAC,UAAW,EAAAC,KAAY,EAAAC,GAAA;EACtC,MAAM;IAAEC,KAAK,EAAEC,SAAS;IAAEC,UAAU,EAAEC,cAAc;IAAEC,UAAU,EAAEC,cAAc;IAAEC;EAAG,IAAAC,kBAAwB;EAC7G,MAAM;IAAAP,KAAA,EAAQQ,SAAG;IAAAN,UAAkB,EAAAO,cAAA;IAAAL,UAAA,EAAAM;EAAA,IAAAC,sBAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAIb,KAAA,GAAAc,eAAA,CACJ,CACMC,aAAS,CAAKC,IAAE,CAAAC,OAAU,EAC1BL,QAAA,CAASZ,KAAE,EAAIkB,QAAS,EAAAF,IAAA,EAAAC,OAAA,EACxBhB,SAAS,EAAEe,IAAA,EAAAC,OAAO,EAClBT,SAAM,EAAAS,OAAA,EACPnB,KAAA,CAAAE,KAAA,CACD,EACJ,CACMmB,GAAG,CAACP,QAAA,CAAAV,UAAgB,yBAAe,GACnCiB,GAAG,CAAChB,cAAc,EAAE,cAAU,GAC9BgB,GAAA,CAAAV,cAAM,cACPX,KAAA,CAAAI,UAAA,CACD,EACJ,CACMiB,GAAG,CAACP,QAAA,CAAAR,UAAgB,yBAAe,GACnCe,GAAG,CAACd,cAAc,EAAE,cAAU,GAC9Bc,GAAA,CAAAT,cAAM,cACZZ,KAAA,CAAAM,UAAA,CAEE;EACA;IAAAgB,SAAA;IAAA,GAAAC;EAA0B,IAAAC,YAAA,CAAAxB,KAAA,EAAAc,QAAA,CAAAd,KAAA,EAAAyB,eAAA;EAC5B,OAAI,eAAAC,GAAuB,CACvBC,sBAAA,CAAAC,QAAA,EACJ;IACMC,KAAA;MAAQ3B,KAAA,EAAAF,KAAA,CAAAE,KAAkB;MAAGE,UAAA,EAAAJ,KAAA,CAAAI,UAAA;MAAAE,UAAA,EAAAN,KAAA,CAAAM;IAAA;IACnCwB,QAAa,iBAAAJ,GAAA,CACL,OACR;MACUzB,GAAA;MACA,aAAW,oBAAmB;MAC9BqB,SAAG,EAAAS,OAAA,CAAA7B,KAAA,CAAA8B,IAAA,CAAAC,IAAA,EAAAzB,UAAA,GAAAN,KAAA,CAAA8B,IAAA,CAAAxB,UAAA,GAAAN,KAAA,CAAA8B,IAAA,CAAAE,QAAA,EAAAZ,SAAA;MACb,GAAAC;IACA,CACA;EACG,CACF;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}