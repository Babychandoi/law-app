{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { useMergeRefs, FloatingFocusManager } from '@floating-ui/react';\nimport { useState, useRef, isValidElement, useMemo, cloneElement } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { useBaseFLoating, useFloatingInteractions } from '../../hooks/use-floating.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { getArrowPlacement } from '../Floating/helpers.js';\nimport { popoverTheme } from './theme.js';\nfunction Popover(props) {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([popoverTheme, provider.theme?.popover, props.theme], [get(provider.clearTheme, \"popover\"), props.clearTheme], [get(provider.applyTheme, \"popover\"), props.applyTheme]);\n  const {\n    children,\n    content,\n    arrow = true,\n    trigger = \"click\",\n    initialOpen,\n    open: controlledOpen,\n    onOpenChange: setControlledOpen,\n    placement: theirPlacement = \"bottom\",\n    ...restProps\n  } = resolveProps(props, provider.props?.popover);\n  const [uncontrolledOpen, setUncontrolledOpen] = useState(Boolean(initialOpen));\n  const arrowRef = useRef(null);\n  const open = controlledOpen ?? uncontrolledOpen;\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\n  const floatingProps = useBaseFLoating({\n    open,\n    placement: theirPlacement,\n    arrowRef,\n    setOpen\n  });\n  const {\n    floatingStyles,\n    context,\n    placement,\n    middlewareData: {\n      arrow: {\n        x: arrowX,\n        y: arrowY\n      } = {}\n    },\n    refs\n  } = floatingProps;\n  const {\n    getFloatingProps,\n    getReferenceProps\n  } = useFloatingInteractions({\n    context,\n    role: \"dialog\",\n    trigger\n  });\n  const childrenRef = children.ref;\n  const ref = useMergeRefs([context.refs.setReference, childrenRef]);\n  if (!isValidElement(children)) {\n    throw Error(\"Invalid target element\");\n  }\n  const target = useMemo(() => {\n    return cloneElement(children, getReferenceProps({\n      ref,\n      \"data-testid\": \"flowbite-popover-target\",\n      ...children?.props\n    }));\n  }, [children, ref, getReferenceProps]);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [target, open && /* @__PURE__ */jsx(FloatingFocusManager, {\n      context,\n      modal: true,\n      children: /* @__PURE__ */jsx(\"div\", {\n        className: theme.base,\n        ref: refs.setFloating,\n        \"data-testid\": \"flowbite-popover\",\n        ...restProps,\n        style: floatingStyles,\n        ...getFloatingProps(),\n        children: /* @__PURE__ */jsxs(\"div\", {\n          className: theme.inner,\n          children: [arrow && /* @__PURE__ */jsx(\"div\", {\n            className: theme.arrow.base,\n            \"data-testid\": \"flowbite-popover-arrow\",\n            ref: arrowRef,\n            style: {\n              top: arrowY ?? \" \",\n              left: arrowX ?? \" \",\n              right: \" \",\n              bottom: \" \",\n              [getArrowPlacement({\n                placement\n              })]: theme.arrow.placement\n            },\n            children: \"\\xA0\"\n          }), /* @__PURE__ */jsx(\"div\", {\n            className: theme.content,\n            children: content\n          })]\n        })\n      })\n    })]\n  });\n}\nPopover.displayName = \"Popover\";\nexport { Popover };","map":{"version":3,"names":["Popover","props","provider","useThemeProvider","theme","useResolveTheme","popoverTheme","popover","get","clearTheme","applyTheme","children","content","arrow","trigger","initialOpen","open","controlledOpen","onOpenChange","setControlledOpen","placement","theirPlacement","restProps","resolveProps","uncontrolledOpen","setUncontrolledOpen","useState","Boolean","arrowRef","useRef","setOpen","floatingProps","useBaseFLoating","floatingStyles","context","middlewareData","x","arrowX","y","arrowY","refs","getFloatingProps","getReferenceProps","useFloatingInteractions","role","childrenRef","ref","useMergeRefs","setReference","isValidElement","Error","target","useMemo","cloneElement","jsxs","Fragment","jsx","FloatingFocusManager","modal","className","base","setFloating","style","inner","top","left","right","bottom","getArrowPlacement"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Popover\\Popover.tsx"],"sourcesContent":["\"use client\";\n\nimport type { Placement } from \"@floating-ui/react\";\nimport { FloatingFocusManager, useMergeRefs } from \"@floating-ui/react\";\nimport type { ComponentProps, ComponentPropsWithRef, Dispatch, ReactNode, SetStateAction } from \"react\";\nimport { cloneElement, isValidElement, useMemo, useRef, useState } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { useBaseFLoating, useFloatingInteractions } from \"../../hooks/use-floating\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport type { FloatingArrowTheme } from \"../Floating\";\nimport { getArrowPlacement } from \"../Floating/helpers\";\nimport { popoverTheme } from \"./theme\";\n\nexport interface PopoverTheme {\n  base: string;\n  inner: string;\n  content: string;\n  arrow: Omit<FloatingArrowTheme, \"style\">;\n}\n\nexport interface PopoverProps extends Omit<ComponentProps<\"div\">, \"content\" | \"style\">, ThemingProps<PopoverTheme> {\n  arrow?: boolean;\n  content: ReactNode;\n  placement?: \"auto\" | Placement;\n  trigger?: \"hover\" | \"click\";\n  initialOpen?: boolean;\n  open?: boolean;\n  onOpenChange?: Dispatch<SetStateAction<boolean>>;\n}\n\nexport function Popover(props: PopoverProps) {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [popoverTheme, provider.theme?.popover, props.theme],\n    [get(provider.clearTheme, \"popover\"), props.clearTheme],\n    [get(provider.applyTheme, \"popover\"), props.applyTheme],\n  );\n\n  const {\n    children,\n    content,\n    arrow = true,\n    trigger = \"click\",\n    initialOpen,\n    open: controlledOpen,\n    onOpenChange: setControlledOpen,\n    placement: theirPlacement = \"bottom\",\n    ...restProps\n  } = resolveProps(props, provider.props?.popover);\n\n  const [uncontrolledOpen, setUncontrolledOpen] = useState<boolean>(Boolean(initialOpen));\n  const arrowRef = useRef<HTMLDivElement>(null);\n\n  const open = controlledOpen ?? uncontrolledOpen;\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\n\n  const floatingProps = useBaseFLoating({\n    open,\n    placement: theirPlacement,\n    arrowRef,\n    setOpen,\n  });\n\n  const {\n    floatingStyles,\n    context,\n    placement,\n    middlewareData: { arrow: { x: arrowX, y: arrowY } = {} },\n    refs,\n  } = floatingProps;\n\n  const { getFloatingProps, getReferenceProps } = useFloatingInteractions({\n    context,\n    role: \"dialog\",\n    trigger,\n  });\n\n  const childrenRef = (children as ComponentPropsWithRef<\"button\">).ref;\n  const ref = useMergeRefs([context.refs.setReference, childrenRef]);\n\n  if (!isValidElement(children)) {\n    throw Error(\"Invalid target element\");\n  }\n\n  const target = useMemo(() => {\n    return cloneElement(\n      children,\n      getReferenceProps({\n        ref,\n        \"data-testid\": \"flowbite-popover-target\",\n        ...children?.props,\n      }),\n    );\n  }, [children, ref, getReferenceProps]);\n\n  return (\n    <>\n      {target}\n      {open && (\n        <FloatingFocusManager context={context} modal>\n          <div\n            className={theme.base}\n            ref={refs.setFloating}\n            data-testid=\"flowbite-popover\"\n            {...restProps}\n            style={floatingStyles}\n            {...getFloatingProps()}\n          >\n            <div className={theme.inner}>\n              {arrow && (\n                <div\n                  className={theme.arrow.base}\n                  data-testid=\"flowbite-popover-arrow\"\n                  ref={arrowRef}\n                  style={{\n                    top: arrowY ?? \" \",\n                    left: arrowX ?? \" \",\n                    right: \" \",\n                    bottom: \" \",\n                    [getArrowPlacement({ placement })]: theme.arrow.placement,\n                  }}\n                >\n                  &nbsp;\n                </div>\n              )}\n              <div className={theme.content}>{content}</div>\n            </div>\n          </div>\n        </FloatingFocusManager>\n      )}\n    </>\n  );\n}\n\nPopover.displayName = \"Popover\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}