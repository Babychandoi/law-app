{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useTableContext } from './TableContext.js';\nimport { useTableHeadContext } from './TableHeadContext.js';\nimport { tableTheme } from './theme.js';\nconst TableHeadCell = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme\n  } = useTableContext();\n  const {\n    theme: headTheme,\n    clearTheme: headClearTheme,\n    applyTheme: headApplyTheme\n  } = useTableHeadContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([tableTheme.head.cell, provider.theme?.table?.head?.cell, rootTheme?.head?.cell, headTheme?.cell, props.theme], [get(provider.clearTheme, \"table.head.cell\"), get(rootClearTheme, \"head.cell\"), get(headClearTheme, \"cell\"), props.clearTheme], [get(provider.applyTheme, \"table.head.cell\"), get(rootApplyTheme, \"head.cell\"), get(headApplyTheme, \"cell\"), props.applyTheme]);\n  const {\n    className,\n    ...restProps\n  } = resolveProps(props, provider.props?.tableHeadCell);\n  return /* @__PURE__ */jsx(\"th\", {\n    ref,\n    className: twMerge(theme.base, className),\n    ...restProps\n  });\n});\nTableHeadCell.displayName = \"TableHeadCell\";\nexport { TableHeadCell };","map":{"version":3,"names":["TableHeadCell","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","useTableContext","headTheme","headClearTheme","headApplyTheme","useTableHeadContext","provider","useThemeProvider","useResolveTheme","tableTheme","head","cell","table","get","className","restProps","resolveProps","tableHeadCell","jsx","twMerge","base"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Table\\TableHeadCell.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentPropsWithRef } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { useTableContext } from \"./TableContext\";\nimport { useTableHeadContext } from \"./TableHeadContext\";\nimport { tableTheme } from \"./theme\";\n\nexport interface TableHeadCellTheme {\n  base: string;\n}\n\nexport interface TableHeadCellProps extends ComponentPropsWithRef<\"th\">, ThemingProps<TableHeadCellTheme> {}\n\nexport const TableHeadCell = forwardRef<HTMLTableCellElement, TableHeadCellProps>((props, ref) => {\n  const { theme: rootTheme, clearTheme: rootClearTheme, applyTheme: rootApplyTheme } = useTableContext();\n  const { theme: headTheme, clearTheme: headClearTheme, applyTheme: headApplyTheme } = useTableHeadContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [tableTheme.head.cell, provider.theme?.table?.head?.cell, rootTheme?.head?.cell, headTheme?.cell, props.theme],\n    [\n      get(provider.clearTheme, \"table.head.cell\"),\n      get(rootClearTheme, \"head.cell\"),\n      get(headClearTheme, \"cell\"),\n      props.clearTheme,\n    ],\n    [\n      get(provider.applyTheme, \"table.head.cell\"),\n      get(rootApplyTheme, \"head.cell\"),\n      get(headApplyTheme, \"cell\"),\n      props.applyTheme,\n    ],\n  );\n\n  const { className, ...restProps } = resolveProps(props, provider.props?.tableHeadCell);\n\n  return <th ref={ref} className={twMerge(theme.base, className)} {...restProps} />;\n});\n\nTableHeadCell.displayName = \"TableHeadCell\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,aAAe,GAAAC,UAAW,EAAAC,KAAU,EAAEC,GAAA;EACtC,MAAM;IAAEC,KAAK,EAAEC,SAAS;IAAEC,UAAU,EAAEC,cAAc;IAAEC,UAAU,EAAEC;EAAc,CAAE,GAAGC,eAAA;EACrF,MAAM;IAAAN,KAAA,EAAQO,SAAG;IAAAL,UAAkB,EAAAM,cAAA;IAAAJ,UAAA,EAAAK;EAAA,IAAAC,mBAAA;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKZ,KAAA,GAAWa,eAAW,CACvB,CAAAC,UAAA,CAAAC,IAAA,CAAAC,IAAA,EAAAL,QAAA,CAAAX,KAAA,EAAAiB,KAAA,EAAAF,IAAA,EAAAC,IAAA,EAAAf,SAAA,EAAAc,IAAA,EAAAC,IAAA,EAAAT,SAAA,EAAAS,IAAA,EAAAlB,KAAA,CAAAE,KAAA,GACJ,CACMkB,GAAG,CAACP,QAAA,CAAAT,UAAgB,mBAAY,GAChCgB,GAAG,CAACf,cAAc,EAAE,WAAO,GAC3Be,GAAA,CAAAV,cAAM,WACPV,KAAA,CAAAI,UAAA,CACD,EACJ,CACMgB,GAAG,CAACP,QAAA,CAAAP,UAAgB,mBAAY,GAChCc,GAAG,CAACb,cAAc,EAAE,WAAO,GAC3Ba,GAAA,CAAAT,cAAM,WACZX,KAAA,CAAAM,UAAA,CAEE;EACA;IAAAe,SAAA;IAAA,GAAAC;EAA+B,CAAE,GAAEC,YAAK,CAASvB,KAAE,EAAAa,QAAa,CAACb,KAAI,EAAEwB,aAAY,CAAG;EACvF,sBAAAC,GAAA;IAAAxB,GAAA;IAAAoB,SAAA,EAAAK,OAAA,CAAAxB,KAAA,CAAAyB,IAAA,EAAAN,SAAA;IAAA,GAAAC;EAAA;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}