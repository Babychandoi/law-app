{"ast":null,"code":"// utils/GoogleMap.utils.ts\n\nexport const generateMapUrl = (coordinates, height, language, label, mapType, zoom) => {\n  const params = new URLSearchParams({\n    width: '100%',\n    height: height.toString(),\n    hl: language,\n    q: `${coordinates.lat},${coordinates.lng}+(${label})`,\n    t: mapType,\n    z: zoom.toString(),\n    ie: 'UTF8',\n    iwloc: 'B',\n    output: 'embed'\n  });\n  return `https://maps.google.com/maps?${params.toString()}`;\n};\nexport const getContainerStyles = (width, height, borderRadius, customStyle = {}) => ({\n  width,\n  height,\n  borderRadius,\n  overflow: 'hidden',\n  position: 'relative',\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  ...customStyle\n});\nexport const getIframeStyles = loading => ({\n  border: 0,\n  width: '100%',\n  height: '100%',\n  display: loading ? 'none' : 'block'\n});\nexport const handleMapLoad = label => {\n  console.log(`Map loaded successfully: ${label}`);\n};\nexport const handleMapError = label => {\n  console.error(`Failed to load Google Maps: ${label}`);\n};","map":{"version":3,"names":["generateMapUrl","coordinates","height","language","label","mapType","zoom","params","URLSearchParams","width","toString","hl","q","lat","lng","t","z","ie","iwloc","output","getContainerStyles","borderRadius","customStyle","overflow","position","backgroundColor","display","alignItems","justifyContent","getIframeStyles","loading","border","handleMapLoad","console","log","handleMapError","error"],"sources":["C:/Users/phong/Documents/GitHub/law-app/fontend/src/page/contact/googleMap/utils/GoogleMap.utils.ts"],"sourcesContent":["// utils/GoogleMap.utils.ts\nimport { Coordinates, MapLanguage, MapType } from '../types/GoogleMap.types';\n\nexport const generateMapUrl = (\n  coordinates: Coordinates,\n  height: string | number,\n  language: MapLanguage,\n  label: string,\n  mapType: MapType,\n  zoom: number\n): string => {\n  const params = new URLSearchParams({\n    width: '100%',\n    height: height.toString(),\n    hl: language,\n    q: `${coordinates.lat},${coordinates.lng}+(${label})`,\n    t: mapType,\n    z: zoom.toString(),\n    ie: 'UTF8',\n    iwloc: 'B',\n    output: 'embed'\n  });\n  \n  return `https://maps.google.com/maps?${params.toString()}`;\n};\n\nexport const getContainerStyles = (\n  width: string | number,\n  height: string | number,\n  borderRadius: string,\n  customStyle: React.CSSProperties = {}\n): React.CSSProperties => ({\n  width,\n  height,\n  borderRadius,\n  overflow: 'hidden',\n  position: 'relative',\n  backgroundColor: '#f5f5f5',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  ...customStyle\n});\n\nexport const getIframeStyles = (loading: boolean): React.CSSProperties => ({\n  border: 0,\n  width: '100%',\n  height: '100%',\n  display: loading ? 'none' : 'block'\n});\n\nexport const handleMapLoad = (label: string) => {\n  console.log(`Map loaded successfully: ${label}`);\n};\n\nexport const handleMapError = (label: string) => {\n  console.error(`Failed to load Google Maps: ${label}`);\n};"],"mappings":"AAAA;;AAGA,OAAO,MAAMA,cAAc,GAAGA,CAC5BC,WAAwB,EACxBC,MAAuB,EACvBC,QAAqB,EACrBC,KAAa,EACbC,OAAgB,EAChBC,IAAY,KACD;EACX,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IACjCC,KAAK,EAAE,MAAM;IACbP,MAAM,EAAEA,MAAM,CAACQ,QAAQ,CAAC,CAAC;IACzBC,EAAE,EAAER,QAAQ;IACZS,CAAC,EAAE,GAAGX,WAAW,CAACY,GAAG,IAAIZ,WAAW,CAACa,GAAG,KAAKV,KAAK,GAAG;IACrDW,CAAC,EAAEV,OAAO;IACVW,CAAC,EAAEV,IAAI,CAACI,QAAQ,CAAC,CAAC;IAClBO,EAAE,EAAE,MAAM;IACVC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,OAAO,gCAAgCZ,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;AAC5D,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAGA,CAChCX,KAAsB,EACtBP,MAAuB,EACvBmB,YAAoB,EACpBC,WAAgC,GAAG,CAAC,CAAC,MACZ;EACzBb,KAAK;EACLP,MAAM;EACNmB,YAAY;EACZE,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE,UAAU;EACpBC,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,QAAQ;EACxB,GAAGN;AACL,CAAC,CAAC;AAEF,OAAO,MAAMO,eAAe,GAAIC,OAAgB,KAA2B;EACzEC,MAAM,EAAE,CAAC;EACTtB,KAAK,EAAE,MAAM;EACbP,MAAM,EAAE,MAAM;EACdwB,OAAO,EAAEI,OAAO,GAAG,MAAM,GAAG;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAME,aAAa,GAAI5B,KAAa,IAAK;EAC9C6B,OAAO,CAACC,GAAG,CAAC,4BAA4B9B,KAAK,EAAE,CAAC;AAClD,CAAC;AAED,OAAO,MAAM+B,cAAc,GAAI/B,KAAa,IAAK;EAC/C6B,OAAO,CAACG,KAAK,CAAC,+BAA+BhC,KAAK,EAAE,CAAC;AACvD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}