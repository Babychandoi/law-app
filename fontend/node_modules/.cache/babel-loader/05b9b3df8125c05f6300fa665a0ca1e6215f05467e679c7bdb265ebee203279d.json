{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useId, useLayoutEffect } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { OutlineXIcon } from '../../icons/outline-x-icon.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { useModalContext } from './ModalContext.js';\nimport { modalTheme } from './theme.js';\nconst ModalHeader = forwardRef((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    popup,\n    onClose,\n    setHeaderId\n  } = useModalContext();\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([modalTheme.header, provider.theme?.modal?.header, rootTheme?.header, props.theme], [get(provider.clearTheme, \"modal.header\"), get(rootClearTheme, \"header\"), props.clearTheme], [get(provider.applyTheme, \"modal.header\"), get(rootApplyTheme, \"header\"), props.applyTheme]);\n  const {\n    as: Component = \"h3\",\n    children,\n    className,\n    id,\n    ...restProps\n  } = resolveProps(props, provider.props?.modalHeader);\n  const innerHeaderId = useId();\n  const headerId = id || innerHeaderId;\n  useLayoutEffect(() => {\n    setHeaderId(headerId);\n    return () => setHeaderId(void 0);\n  }, [headerId, setHeaderId]);\n  return /* @__PURE__ */jsxs(\"div\", {\n    ref,\n    className: twMerge(theme.base, popup && theme.popup, className),\n    ...restProps,\n    children: [/* @__PURE__ */jsx(Component, {\n      id: headerId,\n      className: theme.title,\n      children\n    }), /* @__PURE__ */jsx(\"button\", {\n      \"aria-label\": \"Close\",\n      className: theme.close.base,\n      type: \"button\",\n      onClick: onClose,\n      children: /* @__PURE__ */jsx(OutlineXIcon, {\n        \"aria-hidden\": true,\n        className: theme.close.icon\n      })\n    })]\n  });\n});\nModalHeader.displayName = \"ModalHeader\";\nexport { ModalHeader };","map":{"version":3,"names":["ModalHeader","forwardRef","props","ref","theme","rootTheme","clearTheme","rootClearTheme","applyTheme","rootApplyTheme","popup","onClose","setHeaderId","useModalContext","provider","useThemeProvider","useResolveTheme","modalTheme","header","modal","get","as","Component","children","className","id","restProps","resolveProps","modalHeader","innerHeaderId","useId","headerId","useLayoutEffect","jsxs","twMerge","base","jsx","title","close","type","onClick","OutlineXIcon","icon"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\Modal\\ModalHeader.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, useId, useLayoutEffect, type ComponentProps, type ElementType } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { OutlineXIcon } from \"../../icons/outline-x-icon\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { useModalContext } from \"./ModalContext\";\nimport { modalTheme } from \"./theme\";\n\nexport interface ModalHeaderTheme {\n  base: string;\n  popup: string;\n  title: string;\n  close: {\n    base: string;\n    icon: string;\n  };\n}\n\nexport interface ModalHeaderProps extends ComponentProps<\"div\">, ThemingProps<ModalHeaderTheme> {\n  as?: ElementType;\n}\n\nexport const ModalHeader = forwardRef<HTMLDivElement, ModalHeaderProps>((props, ref) => {\n  const {\n    theme: rootTheme,\n    clearTheme: rootClearTheme,\n    applyTheme: rootApplyTheme,\n    popup,\n    onClose,\n    setHeaderId,\n  } = useModalContext();\n\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [modalTheme.header, provider.theme?.modal?.header, rootTheme?.header, props.theme],\n    [get(provider.clearTheme, \"modal.header\"), get(rootClearTheme, \"header\"), props.clearTheme],\n    [get(provider.applyTheme, \"modal.header\"), get(rootApplyTheme, \"header\"), props.applyTheme],\n  );\n\n  const {\n    as: Component = \"h3\",\n    children,\n    className,\n    id,\n    ...restProps\n  } = resolveProps(props, provider.props?.modalHeader);\n\n  const innerHeaderId = useId();\n  const headerId = id || innerHeaderId;\n\n  useLayoutEffect(() => {\n    setHeaderId(headerId);\n\n    return () => setHeaderId(undefined);\n  }, [headerId, setHeaderId]);\n\n  return (\n    <div ref={ref} className={twMerge(theme.base, popup && theme.popup, className)} {...restProps}>\n      <Component id={headerId} className={theme.title}>\n        {children}\n      </Component>\n      <button aria-label=\"Close\" className={theme.close.base} type=\"button\" onClick={onClose}>\n        <OutlineXIcon aria-hidden className={theme.close.icon} />\n      </button>\n    </div>\n  );\n});\n\nModalHeader.displayName = \"ModalHeader\";\n"],"mappings":";;;;;;;;;;;;AAaA,MAAEA,WAAM,GAAAC,UAAA,EAAAC,KAAA,EAAAC,GAAA;EACR,MAAI;IACAC,KAAA,EAAAC,SAAY;IACZC,UAAU,EAAEC,cAAc;IAC1BC,UAAK,EAAAC,cAAA;IACLC,KAAA;IACAC,OAAA;IACDC;EACD,IAAAC,eAAiB;EACjB,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKX,KAAA,GAAWY,eAAQ,CACpB,CAACC,UAAI,CAAAC,MAAS,EAAAJ,QAAY,CAAAV,KAAA,EAAAe,KAAe,EAAED,MAAI,EAAAb,SAAA,EAAca,MAAE,EAAAhB,KAAW,CAAAE,KAAM,GAChF,CAACgB,GAAG,CAACN,QAAQ,CAACR,UAAU,EAAE,cAAc,CAAC,EAAEc,GAAG,CAACb,cAAc,EAAE,QAAQ,CAAC,EAAEL,KAAK,CAACI,UAAU,GAC3F,CAAAc,GAAA,CAAAN,QAAA,CAAAN,UAAA,mBAAAY,GAAA,CAAAX,cAAA,aAAAP,KAAA,CAAAM,UAAA,CACD;EACF,MAAQ;IACJa,EAAA,EAAAC,SAAQ;IACRC,QAAA;IACAC,SAAE;IACFC,EAAA;IACD,GAAGC;EACJ,IAAAC,YAAM,CAAAzB,KAAgB,EAAAY,QAAO,CAAAZ,KAAA,EAAA0B,WAAA;EAC7B,MAAMC,aAAa,GAAAC,KAAI;EACvB,MAAAC,QAAA,GAAgBN,EAAA,IAAMI,aAAA;EACxBG,eAAgB,OAAQ;IACpBpB,WAAO,CAAAmB,QAAM;IACd,OAAG,MAAUnB,WAAY,CAAC;EAC3B,IAAAmB,QAAA,EAAAnB,WAAuB,EAAI;EAC7B,sBAAwBqB,IAAA,MAAW,EAAE;IAAE9B,GAAE;IAAAqB,SAAU,EAAAU,OAAW,CAAA9B,KAAM,CAAA+B,IAAK,EAAEzB,KAAA,IAAQN,KAAG,CAAAM,KAAA,EAAAc,SAAA;IAAA,GAAAE,SAAA;IAAAH,QAAA,GACtF,eAAoBa,GAAG,CAACd,SAAQ,EAAE;MAAEG,EAAA,EAAAM,QAAY;MAAEP,SAAS,EAAApB,KAAA,CAASiC,KAAE;MAAKd;IAAO,EAAI,EACnF,eAAGa,GAAA;MAAA;MAAAZ,SAAA,EAAApB,KAAA,CAAAkC,KAAA,CAAAH,IAAA;MAAAI,IAAA;MAAAC,OAAA,EAAA7B,OAAA;MAAAY,QAAA,iBAAAa,GAAA,CAAAK,YAAA;QAAA;QAAAjB,SAAA,EAAApB,KAAA,CAAAkC,KAAA,CAAAI;MAAA;IAAA;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}