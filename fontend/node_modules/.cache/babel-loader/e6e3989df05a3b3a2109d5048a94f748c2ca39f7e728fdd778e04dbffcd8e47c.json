{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { get } from '../../helpers/get.js';\nimport { resolveProps } from '../../helpers/resolve-props.js';\nimport { useResolveTheme } from '../../helpers/resolve-theme.js';\nimport { twMerge } from '../../helpers/tailwind-merge.js';\nimport { useThemeProvider } from '../../theme/provider.js';\nimport { listTheme } from './theme.js';\nconst ListItem = forwardRef((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme([listTheme.item, provider.theme?.list?.item, props.theme], [get(provider.clearTheme, \"list.item\"), props.clearTheme], [get(provider.applyTheme, \"list.item\"), props.applyTheme]);\n  const {\n    children,\n    className,\n    icon: Icon,\n    ...restProps\n  } = resolveProps(props, provider.props?.listItem);\n  return /* @__PURE__ */jsxs(\"li\", {\n    ref,\n    className: twMerge(theme.withIcon[Icon ? \"on\" : \"off\"], className),\n    ...restProps,\n    children: [Icon && /* @__PURE__ */jsx(Icon, {\n      className: twMerge(theme.icon)\n    }), children]\n  });\n});\nListItem.displayName = \"ListItem\";\nexport { ListItem };","map":{"version":3,"names":["ListItem","forwardRef","props","ref","provider","useThemeProvider","theme","useResolveTheme","listTheme","item","list","get","clearTheme","applyTheme","children","className","icon","Icon","restProps","resolveProps","listItem","jsxs","twMerge","withIcon","jsx"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\components\\List\\ListItem.tsx"],"sourcesContent":["\"use client\";\n\nimport { forwardRef, type ComponentProps, type FC } from \"react\";\nimport { get } from \"../../helpers/get\";\nimport { resolveProps } from \"../../helpers/resolve-props\";\nimport { useResolveTheme } from \"../../helpers/resolve-theme\";\nimport { twMerge } from \"../../helpers/tailwind-merge\";\nimport { useThemeProvider } from \"../../theme/provider\";\nimport type { ThemingProps } from \"../../types\";\nimport { listTheme } from \"./theme\";\n\nexport interface ListItemTheme {\n  icon: string;\n  withIcon: {\n    on: string;\n    off: string;\n  };\n}\n\nexport interface ListItemProps extends ComponentProps<\"li\">, ThemingProps<ListItemTheme> {\n  className?: string;\n  icon?: FC<ComponentProps<\"svg\">>;\n}\n\nexport const ListItem = forwardRef<HTMLLIElement, ListItemProps>((props, ref) => {\n  const provider = useThemeProvider();\n  const theme = useResolveTheme(\n    [listTheme.item, provider.theme?.list?.item, props.theme],\n    [get(provider.clearTheme, \"list.item\"), props.clearTheme],\n    [get(provider.applyTheme, \"list.item\"), props.applyTheme],\n  );\n\n  const { children, className, icon: Icon, ...restProps } = resolveProps(props, provider.props?.listItem);\n\n  return (\n    <li ref={ref} className={twMerge(theme.withIcon[Icon ? \"on\" : \"off\"], className)} {...restProps}>\n      {Icon && <Icon className={twMerge(theme.icon)} />}\n      {children}\n    </li>\n  );\n});\n\nListItem.displayName = \"ListItem\";\n"],"mappings":";;;;;;;;;;AAWA,MAAEA,QAAM,GAAQC,UAAG,EAAAC,KAAA,EAAgBC,GAAE;EACnC,MAAMC,QAAQ,GAAAC,gBAAe;EAC/B,MAAKC,KAAA,GAAUC,eAAe,CAC1B,CAACC,SAAI,CAAAC,IAAS,EAAAL,QAAU,CAAEE,KAAA,EAAAI,IAAW,EAACD,IAAE,EAAKP,KAAC,CAAAI,KAAU,CAAC,EACzD,CAACK,GAAG,CAACP,QAAQ,CAACQ,UAAU,EAAE,WAAW,CAAC,EAAEV,KAAK,CAACU,UAAU,GACzD,CAAAD,GAAA,CAAAP,QAAA,CAAAS,UAAA,gBAAAX,KAAA,CAAAW,UAAA,CACD;EACA;IAAAC,QAAA;IAAAC,SAA2B;IAACC,IAAI,EAAEC,IAAK;IAAE,GAAAC;EAAW,IAAAC,YAAc,CAAAjB,KAAS,EAAAE,QAAW,CAAAF,KAAG,EAAKkB,QAAG;EACnG,OAAQ,eAAAC,IAAoB,KAAI,EAAI;IAAElB,GAAE;IAAAY,SAAW,EAAAO,OAAQ,CAAAhB,KAAM,CAAAiB,QAAQ,CAAAN,IAAA,kBAAAF,SAAA;IAAA,GAAAG,SAAA;IAAAJ,QAAA,GACrEG,IAAA,mBAAAO,GAAA,CAAAP,IAAA;MAAAF,SAAA,EAAAO,OAAA,CAAAhB,KAAA,CAAAU,IAAA;IAAA,IACDF,QAAG;EACL;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}