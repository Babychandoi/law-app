{"ast":null,"code":"function get(input, path) {\n  const keys = path.split(\".\");\n  let result = input;\n  for (const key of keys) {\n    if (typeof result === \"boolean\" || typeof result === \"string\") {\n      return result;\n    }\n    if (result == null || typeof result !== \"object\") {\n      return void 0;\n    }\n    result = result[key];\n  }\n  return result;\n}\nexport { get };","map":{"version":3,"names":["get","input","path","keys","split","result","key"],"sources":["D:\\ATWON\\law-app\\node_modules\\flowbite-react\\src\\helpers\\get.ts"],"sourcesContent":["/**\n * Safely retrieves a value from a nested object using a dot-notated path string\n *\n * @template T - The type of the input object\n * @param {T} input - The input object to traverse\n * @param {string} path - A dot-notated string path (e.g. \"user.address.street\")\n * @returns {any} The value at the specified path, or undefined if the path is invalid\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function get<T>(input: T, path: string): any {\n  const keys = path.split(\".\");\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let result: any = input;\n\n  for (const key of keys) {\n    if (typeof result === \"boolean\" || typeof result === \"string\") {\n      return result;\n    }\n    if (result == null || typeof result !== \"object\") {\n      return undefined;\n    }\n    result = result[key];\n  }\n\n  return result;\n}\n"],"mappings":"AACO,SAASA,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC/B,MAAMC,IAAI,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAIC,MAAM,GAAGJ,KAAK;EAClB,KAAK,MAAMK,GAAG,IAAIH,IAAI,EAAE;IACtB,IAAI,OAAOE,MAAM,KAAK,SAAS,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC7D,OAAOA,MAAM;IACnB;IACI,IAAIA,MAAM,IAAI,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAChD,OAAO,MAAM;IACnB;IACIA,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC;EACxB;EACE,OAAOD,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}